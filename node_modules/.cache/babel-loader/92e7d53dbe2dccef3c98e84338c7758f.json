{"ast":null,"code":"import _slicedToArray from \"C:/Users/aviv/OneDrive/Desktop/highlights-extract-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"autoFocus\", \"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"defaultValue\", \"defaultListboxOpen\", \"disabled\", \"listboxOpen\", \"onChange\", \"onListboxOpenChange\", \"renderValue\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useControlled as useControlled } from '@mui/utils';\nimport { flattenOptionGroups, getOptionsFromChildren } from './utils';\nimport useSelect from './useSelect';\nimport { appendOwnerState } from '../utils';\nimport PopperUnstyled from '../PopperUnstyled';\nimport { SelectUnstyledContext } from './SelectUnstyledContext';\nimport composeClasses from '../composeClasses';\nimport { getSelectUnstyledUtilityClass } from './selectUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction defaultRenderSingleValue(selectedOption) {\n  var _selectedOption$label;\n\n  return (_selectedOption$label = selectedOption == null ? void 0 : selectedOption.label) != null ? _selectedOption$label : '';\n}\n\nfunction useUtilityClasses(ownerState) {\n  var active = ownerState.active,\n      disabled = ownerState.disabled,\n      open = ownerState.open,\n      focusVisible = ownerState.focusVisible;\n  var slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible', active && 'active', open && 'expanded'],\n    listbox: ['listbox', disabled && 'disabled'],\n    popper: ['popper']\n  };\n  return composeClasses(slots, getSelectUnstyledUtilityClass, {});\n}\n/**\n * The foundation for building custom-styled select components.\n */\n\n\nvar SelectUnstyled = /*#__PURE__*/React.forwardRef(function SelectUnstyled(props, ref) {\n  var _ref, _components$Listbox, _components$Popper, _componentsProps$list, _componentsProps$list2, _componentsProps$root, _componentsProps$list3, _componentsProps$popp;\n\n  var autoFocus = props.autoFocus,\n      children = props.children,\n      className = props.className,\n      component = props.component,\n      _props$components = props.components,\n      components = _props$components === void 0 ? {} : _props$components,\n      _props$componentsProp = props.componentsProps,\n      componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n      defaultValue = props.defaultValue,\n      _props$defaultListbox = props.defaultListboxOpen,\n      defaultListboxOpen = _props$defaultListbox === void 0 ? false : _props$defaultListbox,\n      disabledProp = props.disabled,\n      listboxOpenProp = props.listboxOpen,\n      onChange = props.onChange,\n      onListboxOpenChange = props.onListboxOpenChange,\n      renderValueProp = props.renderValue,\n      valueProp = props.value,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var renderValue = renderValueProp != null ? renderValueProp : defaultRenderSingleValue;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      groupedOptions = _React$useState2[0],\n      setGroupedOptions = _React$useState2[1];\n\n  var options = React.useMemo(function () {\n    return flattenOptionGroups(groupedOptions);\n  }, [groupedOptions]);\n\n  var _useControlled = useControlled({\n    controlled: listboxOpenProp,\n    default: defaultListboxOpen,\n    name: 'SelectUnstyled',\n    state: 'listboxOpen'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      listboxOpen = _useControlled2[0],\n      setListboxOpen = _useControlled2[1];\n\n  React.useEffect(function () {\n    setGroupedOptions(getOptionsFromChildren(children));\n  }, [children]);\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      buttonDefined = _React$useState4[0],\n      setButtonDefined = _React$useState4[1];\n\n  var buttonRef = React.useRef(null);\n  var Button = (_ref = component != null ? component : components.Root) != null ? _ref : 'button';\n  var ListboxRoot = (_components$Listbox = components.Listbox) != null ? _components$Listbox : 'ul';\n  var Popper = (_components$Popper = components.Popper) != null ? _components$Popper : PopperUnstyled;\n\n  var handleButtonRefChange = function handleButtonRefChange(element) {\n    buttonRef.current = element;\n\n    if (element != null) {\n      setButtonDefined(true);\n    }\n  };\n\n  var handleButtonRef = useForkRef(ref, handleButtonRefChange);\n  React.useEffect(function () {\n    if (autoFocus) {\n      buttonRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  var handleOpenChange = function handleOpenChange(isOpen) {\n    setListboxOpen(isOpen);\n    onListboxOpenChange == null ? void 0 : onListboxOpenChange(isOpen);\n  };\n\n  var _useSelect = useSelect({\n    buttonComponent: Button,\n    buttonRef: handleButtonRef,\n    defaultValue: defaultValue,\n    disabled: disabledProp,\n    listboxId: (_componentsProps$list = componentsProps.listbox) == null ? void 0 : _componentsProps$list.id,\n    listboxRef: (_componentsProps$list2 = componentsProps.listbox) == null ? void 0 : _componentsProps$list2.ref,\n    multiple: false,\n    onChange: onChange,\n    onOpenChange: handleOpenChange,\n    open: listboxOpen,\n    options: options,\n    value: valueProp\n  }),\n      buttonActive = _useSelect.buttonActive,\n      buttonFocusVisible = _useSelect.buttonFocusVisible,\n      disabled = _useSelect.disabled,\n      getButtonProps = _useSelect.getButtonProps,\n      getListboxProps = _useSelect.getListboxProps,\n      getOptionProps = _useSelect.getOptionProps,\n      getOptionState = _useSelect.getOptionState,\n      value = _useSelect.value;\n\n  var ownerState = _extends({}, props, {\n    active: buttonActive,\n    defaultListboxOpen: defaultListboxOpen,\n    disabled: disabled,\n    focusVisible: buttonFocusVisible,\n    open: listboxOpen,\n    renderValue: renderValue,\n    value: value\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var selectedOptions = React.useMemo(function () {\n    return options.find(function (o) {\n      return value === o.value;\n    });\n  }, [options, value]);\n  var buttonProps = appendOwnerState(Button, _extends({}, other, componentsProps.root, getButtonProps(), {\n    className: clsx(className, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className, classes.root)\n  }), ownerState);\n  var listboxProps = appendOwnerState(ListboxRoot, _extends({}, componentsProps.listbox, getListboxProps(), {\n    className: clsx((_componentsProps$list3 = componentsProps.listbox) == null ? void 0 : _componentsProps$list3.className, classes.listbox)\n  }), ownerState);\n  var popperProps = appendOwnerState(Popper, _extends({\n    open: listboxOpen,\n    anchorEl: buttonRef.current,\n    placement: 'bottom-start',\n    disablePortal: true,\n    role: undefined\n  }, componentsProps.popper, {\n    className: clsx((_componentsProps$popp = componentsProps.popper) == null ? void 0 : _componentsProps$popp.className, classes.popper)\n  }), ownerState);\n  var context = {\n    getOptionProps: getOptionProps,\n    getOptionState: getOptionState\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Button, _extends({}, buttonProps, {\n      children: renderValue(selectedOptions)\n    })), buttonDefined && /*#__PURE__*/_jsx(Popper, _extends({}, popperProps, {\n      children: /*#__PURE__*/_jsx(ListboxRoot, _extends({}, listboxProps, {\n        children: /*#__PURE__*/_jsx(SelectUnstyledContext.Provider, {\n          value: context,\n          children: children\n        })\n      }))\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the select element is focused during the first mount\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Select.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Listbox: PropTypes.elementType,\n    Popper: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    listbox: PropTypes.object,\n    popper: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the select will be initially open.\n   * @default false\n   */\n  defaultListboxOpen: PropTypes.bool,\n\n  /**\n   * The default selected value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * If `true`, the select is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Controls the open state of the select's listbox.\n   * @default undefined\n   */\n  listboxOpen: PropTypes.bool,\n\n  /**\n   * Callback fired when an option is selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see listboxOpen).\n   */\n  onListboxOpenChange: PropTypes.func,\n\n  /**\n   * Function that customizes the rendering of the selected value.\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * The selected value.\n   * Set to `null` to deselect all options.\n   */\n  value: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any\n} : void 0;\n/**\n * The foundation for building custom-styled select components.\n *\n * Demos:\n *\n * - [Selects](https://mui.com/components/selects/)\n *\n * API:\n *\n * - [SelectUnstyled API](https://mui.com/api/select-unstyled/)\n */\n\nexport default SelectUnstyled;","map":{"version":3,"sources":["C:/Users/aviv/OneDrive/Desktop/highlights-extract-app/node_modules/@mui/base/SelectUnstyled/SelectUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","unstable_useForkRef","useForkRef","unstable_useControlled","useControlled","flattenOptionGroups","getOptionsFromChildren","useSelect","appendOwnerState","PopperUnstyled","SelectUnstyledContext","composeClasses","getSelectUnstyledUtilityClass","jsx","_jsx","jsxs","_jsxs","defaultRenderSingleValue","selectedOption","_selectedOption$label","label","useUtilityClasses","ownerState","active","disabled","open","focusVisible","slots","root","listbox","popper","SelectUnstyled","forwardRef","props","ref","_ref","_components$Listbox","_components$Popper","_componentsProps$list","_componentsProps$list2","_componentsProps$root","_componentsProps$list3","_componentsProps$popp","autoFocus","children","className","component","components","componentsProps","defaultValue","defaultListboxOpen","disabledProp","listboxOpenProp","listboxOpen","onChange","onListboxOpenChange","renderValueProp","renderValue","valueProp","value","other","useState","groupedOptions","setGroupedOptions","options","useMemo","controlled","default","name","state","setListboxOpen","useEffect","buttonDefined","setButtonDefined","buttonRef","useRef","Button","Root","ListboxRoot","Listbox","Popper","handleButtonRefChange","element","current","handleButtonRef","focus","handleOpenChange","isOpen","buttonComponent","listboxId","id","listboxRef","multiple","onOpenChange","buttonActive","buttonFocusVisible","getButtonProps","getListboxProps","getOptionProps","getOptionState","classes","selectedOptions","find","o","buttonProps","listboxProps","popperProps","anchorEl","placement","disablePortal","role","undefined","context","Fragment","Provider","process","env","NODE_ENV","propTypes","bool","node","string","elementType","shape","object","any","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoFocus\", \"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"defaultValue\", \"defaultListboxOpen\", \"disabled\", \"listboxOpen\", \"onChange\", \"onListboxOpenChange\", \"renderValue\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useControlled as useControlled } from '@mui/utils';\nimport { flattenOptionGroups, getOptionsFromChildren } from './utils';\nimport useSelect from './useSelect';\nimport { appendOwnerState } from '../utils';\nimport PopperUnstyled from '../PopperUnstyled';\nimport { SelectUnstyledContext } from './SelectUnstyledContext';\nimport composeClasses from '../composeClasses';\nimport { getSelectUnstyledUtilityClass } from './selectUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction defaultRenderSingleValue(selectedOption) {\n  var _selectedOption$label;\n\n  return (_selectedOption$label = selectedOption == null ? void 0 : selectedOption.label) != null ? _selectedOption$label : '';\n}\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    active,\n    disabled,\n    open,\n    focusVisible\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible', active && 'active', open && 'expanded'],\n    listbox: ['listbox', disabled && 'disabled'],\n    popper: ['popper']\n  };\n  return composeClasses(slots, getSelectUnstyledUtilityClass, {});\n}\n/**\n * The foundation for building custom-styled select components.\n */\n\n\nconst SelectUnstyled = /*#__PURE__*/React.forwardRef(function SelectUnstyled(props, ref) {\n  var _ref, _components$Listbox, _components$Popper, _componentsProps$list, _componentsProps$list2, _componentsProps$root, _componentsProps$list3, _componentsProps$popp;\n\n  const {\n    autoFocus,\n    children,\n    className,\n    component,\n    components = {},\n    componentsProps = {},\n    defaultValue,\n    defaultListboxOpen = false,\n    disabled: disabledProp,\n    listboxOpen: listboxOpenProp,\n    onChange,\n    onListboxOpenChange,\n    renderValue: renderValueProp,\n    value: valueProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const renderValue = renderValueProp != null ? renderValueProp : defaultRenderSingleValue;\n  const [groupedOptions, setGroupedOptions] = React.useState([]);\n  const options = React.useMemo(() => flattenOptionGroups(groupedOptions), [groupedOptions]);\n  const [listboxOpen, setListboxOpen] = useControlled({\n    controlled: listboxOpenProp,\n    default: defaultListboxOpen,\n    name: 'SelectUnstyled',\n    state: 'listboxOpen'\n  });\n  React.useEffect(() => {\n    setGroupedOptions(getOptionsFromChildren(children));\n  }, [children]);\n  const [buttonDefined, setButtonDefined] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const Button = (_ref = component != null ? component : components.Root) != null ? _ref : 'button';\n  const ListboxRoot = (_components$Listbox = components.Listbox) != null ? _components$Listbox : 'ul';\n  const Popper = (_components$Popper = components.Popper) != null ? _components$Popper : PopperUnstyled;\n\n  const handleButtonRefChange = element => {\n    buttonRef.current = element;\n\n    if (element != null) {\n      setButtonDefined(true);\n    }\n  };\n\n  const handleButtonRef = useForkRef(ref, handleButtonRefChange);\n  React.useEffect(() => {\n    if (autoFocus) {\n      buttonRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  const handleOpenChange = isOpen => {\n    setListboxOpen(isOpen);\n    onListboxOpenChange == null ? void 0 : onListboxOpenChange(isOpen);\n  };\n\n  const {\n    buttonActive,\n    buttonFocusVisible,\n    disabled,\n    getButtonProps,\n    getListboxProps,\n    getOptionProps,\n    getOptionState,\n    value\n  } = useSelect({\n    buttonComponent: Button,\n    buttonRef: handleButtonRef,\n    defaultValue,\n    disabled: disabledProp,\n    listboxId: (_componentsProps$list = componentsProps.listbox) == null ? void 0 : _componentsProps$list.id,\n    listboxRef: (_componentsProps$list2 = componentsProps.listbox) == null ? void 0 : _componentsProps$list2.ref,\n    multiple: false,\n    onChange,\n    onOpenChange: handleOpenChange,\n    open: listboxOpen,\n    options,\n    value: valueProp\n  });\n\n  const ownerState = _extends({}, props, {\n    active: buttonActive,\n    defaultListboxOpen,\n    disabled,\n    focusVisible: buttonFocusVisible,\n    open: listboxOpen,\n    renderValue,\n    value\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const selectedOptions = React.useMemo(() => {\n    return options.find(o => value === o.value);\n  }, [options, value]);\n  const buttonProps = appendOwnerState(Button, _extends({}, other, componentsProps.root, getButtonProps(), {\n    className: clsx(className, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className, classes.root)\n  }), ownerState);\n  const listboxProps = appendOwnerState(ListboxRoot, _extends({}, componentsProps.listbox, getListboxProps(), {\n    className: clsx((_componentsProps$list3 = componentsProps.listbox) == null ? void 0 : _componentsProps$list3.className, classes.listbox)\n  }), ownerState);\n  const popperProps = appendOwnerState(Popper, _extends({\n    open: listboxOpen,\n    anchorEl: buttonRef.current,\n    placement: 'bottom-start',\n    disablePortal: true,\n    role: undefined\n  }, componentsProps.popper, {\n    className: clsx((_componentsProps$popp = componentsProps.popper) == null ? void 0 : _componentsProps$popp.className, classes.popper)\n  }), ownerState);\n  const context = {\n    getOptionProps,\n    getOptionState\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Button, _extends({}, buttonProps, {\n      children: renderValue(selectedOptions)\n    })), buttonDefined && /*#__PURE__*/_jsx(Popper, _extends({}, popperProps, {\n      children: /*#__PURE__*/_jsx(ListboxRoot, _extends({}, listboxProps, {\n        children: /*#__PURE__*/_jsx(SelectUnstyledContext.Provider, {\n          value: context,\n          children: children\n        })\n      }))\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the select element is focused during the first mount\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Select.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Listbox: PropTypes.elementType,\n    Popper: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    listbox: PropTypes.object,\n    popper: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the select will be initially open.\n   * @default false\n   */\n  defaultListboxOpen: PropTypes.bool,\n\n  /**\n   * The default selected value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * If `true`, the select is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Controls the open state of the select's listbox.\n   * @default undefined\n   */\n  listboxOpen: PropTypes.bool,\n\n  /**\n   * Callback fired when an option is selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see listboxOpen).\n   */\n  onListboxOpenChange: PropTypes.func,\n\n  /**\n   * Function that customizes the rendering of the selected value.\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * The selected value.\n   * Set to `null` to deselect all options.\n   */\n  value: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any\n} : void 0;\n/**\n * The foundation for building custom-styled select components.\n *\n * Demos:\n *\n * - [Selects](https://mui.com/components/selects/)\n *\n * API:\n *\n * - [SelectUnstyled API](https://mui.com/api/select-unstyled/)\n */\n\nexport default SelectUnstyled;"]},"metadata":{},"sourceType":"module"}