{"ast":null,"code":"import _slicedToArray from \"C:/Users/aviv/OneDrive/Desktop/highlights-extract-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useButton } from '../ButtonUnstyled';\nimport { useListbox, defaultListboxReducer, ActionTypes } from '../ListboxUnstyled';\n\nfunction useSelect(props) {\n  var buttonComponent = props.buttonComponent,\n      buttonRefProp = props.buttonRef,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      listboxId = props.listboxId,\n      listboxRefProp = props.listboxRef,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _onChange = props.onChange,\n      onOpenChange = props.onOpenChange,\n      open = props.open,\n      options = props.options,\n      valueProp = props.value;\n  var buttonRef = React.useRef(null);\n  var handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  var listboxRef = React.useRef(null);\n  var intermediaryListboxRef = useForkRef(listboxRefProp, listboxRef);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'SelectUnstyled',\n    state: 'value'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1]; // prevents closing the listbox on keyUp right after opening it\n\n\n  var ignoreEnterKeyUp = React.useRef(false); // prevents reopening the listbox when button is clicked\n  // (listbox closes on lost focus, then immediately reopens on click)\n\n  var ignoreClick = React.useRef(false); // Ensure the listbox is focused after opening\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      listboxFocusRequested = _React$useState2[0],\n      requestListboxFocus = _React$useState2[1];\n\n  var focusListboxIfRequested = React.useCallback(function () {\n    if (listboxFocusRequested && listboxRef.current != null) {\n      listboxRef.current.focus();\n      requestListboxFocus(false);\n    }\n  }, [listboxFocusRequested]);\n\n  var updateListboxRef = function updateListboxRef(listboxElement) {\n    listboxRef.current = listboxElement;\n    focusListboxIfRequested();\n  };\n\n  var handleListboxRef = useForkRef(intermediaryListboxRef, updateListboxRef);\n  React.useEffect(function () {\n    focusListboxIfRequested();\n  }, [focusListboxIfRequested]);\n  React.useEffect(function () {\n    requestListboxFocus(open != null ? open : false);\n  }, [open]);\n\n  var createHandleMouseDown = function createHandleMouseDown(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onMous;\n\n      otherHandlers == null ? void 0 : (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n\n      if (!event.defaultPrevented && open) {\n        ignoreClick.current = true;\n      }\n    };\n  };\n\n  var createHandleButtonClick = function createHandleButtonClick(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onClic;\n\n      otherHandlers == null ? void 0 : (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n\n      if (!event.defaultPrevented && !ignoreClick.current) {\n        onOpenChange == null ? void 0 : onOpenChange(!open);\n      }\n\n      ignoreClick.current = false;\n    };\n  };\n\n  var createHandleButtonKeyDown = function createHandleButtonKeyDown(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onKeyD;\n\n      otherHandlers == null ? void 0 : (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      if (event.key === 'Enter') {\n        ignoreEnterKeyUp.current = true;\n      }\n\n      if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n        event.preventDefault();\n        onOpenChange == null ? void 0 : onOpenChange(true);\n      }\n    };\n  };\n\n  var createHandleListboxKeyUp = function createHandleListboxKeyUp(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onKeyU;\n\n      otherHandlers == null ? void 0 : (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      var closingKeys = multiple ? ['Escape'] : ['Escape', 'Enter', ' '];\n\n      if (open && !ignoreEnterKeyUp.current && closingKeys.includes(event.key)) {\n        var _buttonRef$current;\n\n        buttonRef == null ? void 0 : (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();\n      }\n\n      ignoreEnterKeyUp.current = false;\n    };\n  };\n\n  var createHandleListboxItemClick = function createHandleListboxItemClick(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onClic2;\n\n      otherHandlers == null ? void 0 : (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      if (!multiple) {\n        onOpenChange == null ? void 0 : onOpenChange(false);\n      }\n    };\n  };\n\n  var createHandleListboxBlur = function createHandleListboxBlur(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$blur;\n\n      otherHandlers == null ? void 0 : (_otherHandlers$blur = otherHandlers.blur) == null ? void 0 : _otherHandlers$blur.call(otherHandlers, event);\n\n      if (!event.defaultPrevented) {\n        onOpenChange == null ? void 0 : onOpenChange(false);\n      }\n    };\n  };\n\n  var listboxReducer = function listboxReducer(state, action) {\n    var newState = defaultListboxReducer(state, action); // change selection when listbox is closed\n\n    if (action.type === ActionTypes.keyDown && !open && (action.event.key === 'ArrowUp' || action.event.key === 'ArrowDown')) {\n      var optionToSelect = action.props.options[newState.highlightedIndex];\n      return _extends({}, newState, {\n        selectedValue: optionToSelect\n      });\n    }\n\n    if (action.type === ActionTypes.blur || action.type === ActionTypes.setControlledValue || action.type === ActionTypes.optionsChange) {\n      var selectedOptionIndex = action.props.options.findIndex(function (o) {\n        return action.props.optionComparer(o, newState.selectedValue);\n      });\n      return _extends({}, newState, {\n        highlightedIndex: selectedOptionIndex\n      });\n    }\n\n    return newState;\n  };\n\n  var _useButton = useButton({\n    component: buttonComponent,\n    disabled: disabled,\n    ref: handleButtonRef\n  }),\n      _getButtonProps = _useButton.getRootProps,\n      buttonActive = _useButton.active,\n      buttonFocusVisible = _useButton.focusVisible;\n\n  var selectedOption = React.useMemo(function () {\n    var _props$options$find;\n\n    return props.multiple ? props.options.filter(function (o) {\n      return value.includes(o.value);\n    }) : (_props$options$find = props.options.find(function (o) {\n      return o.value === value;\n    })) != null ? _props$options$find : null;\n  }, [props.multiple, props.options, value]);\n  var useListboxParameters;\n\n  if (props.multiple) {\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: function isOptionDisabled(o) {\n        var _o$disabled;\n\n        return (_o$disabled = o == null ? void 0 : o.disabled) != null ? _o$disabled : false;\n      },\n      optionComparer: function optionComparer(o, v) {\n        return (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value);\n      },\n      listboxRef: handleListboxRef,\n      multiple: true,\n      onChange: function onChange(newOptions) {\n        setValue(newOptions.map(function (o) {\n          return o.value;\n        }));\n        _onChange == null ? void 0 : _onChange(newOptions.map(function (o) {\n          return o.value;\n        }));\n      },\n      options: options,\n      value: selectedOption\n    };\n  } else {\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: function isOptionDisabled(o) {\n        var _o$disabled2;\n\n        return (_o$disabled2 = o == null ? void 0 : o.disabled) != null ? _o$disabled2 : false;\n      },\n      optionComparer: function optionComparer(o, v) {\n        return (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value);\n      },\n      listboxRef: handleListboxRef,\n      multiple: false,\n      onChange: function onChange(option) {\n        var _option$value, _option$value2;\n\n        setValue((_option$value = option == null ? void 0 : option.value) != null ? _option$value : null);\n        _onChange == null ? void 0 : _onChange((_option$value2 = option == null ? void 0 : option.value) != null ? _option$value2 : null);\n      },\n      options: options,\n      stateReducer: listboxReducer,\n      value: selectedOption\n    };\n  }\n\n  var _useListbox = useListbox(useListboxParameters),\n      _getListboxProps = _useListbox.getRootProps,\n      _getOptionProps = _useListbox.getOptionProps,\n      getOptionState = _useListbox.getOptionState,\n      highlightedOption = _useListbox.highlightedOption;\n\n  React.useDebugValue({\n    value: value,\n    open: open,\n    highlightedOption: highlightedOption\n  });\n  return {\n    buttonActive: buttonActive,\n    buttonFocusVisible: buttonFocusVisible,\n    disabled: disabled,\n    getButtonProps: function getButtonProps(otherHandlers) {\n      return _extends({}, _getButtonProps(_extends({}, otherHandlers, {\n        onClick: createHandleButtonClick(otherHandlers),\n        onMouseDown: createHandleMouseDown(otherHandlers),\n        onKeyDown: createHandleButtonKeyDown(otherHandlers)\n      })), {\n        'aria-expanded': open,\n        'aria-haspopup': 'listbox'\n      });\n    },\n    getListboxProps: function getListboxProps(otherHandlers) {\n      return _getListboxProps(_extends({}, otherHandlers, {\n        onBlur: createHandleListboxBlur(otherHandlers),\n        onKeyUp: createHandleListboxKeyUp(otherHandlers)\n      }));\n    },\n    getOptionProps: function getOptionProps(option, otherHandlers) {\n      return _getOptionProps(option, _extends({}, otherHandlers, {\n        onClick: createHandleListboxItemClick(otherHandlers)\n      }));\n    },\n    getOptionState: getOptionState,\n    open: open,\n    value: value\n  };\n}\n\nexport default useSelect;","map":{"version":3,"sources":["C:/Users/aviv/OneDrive/Desktop/highlights-extract-app/node_modules/@mui/base/SelectUnstyled/useSelect.js"],"names":["_extends","React","unstable_useControlled","useControlled","unstable_useForkRef","useForkRef","useButton","useListbox","defaultListboxReducer","ActionTypes","useSelect","props","buttonComponent","buttonRefProp","buttonRef","defaultValue","disabled","listboxId","listboxRefProp","listboxRef","multiple","onChange","onOpenChange","open","options","valueProp","value","useRef","handleButtonRef","intermediaryListboxRef","controlled","default","name","state","setValue","ignoreEnterKeyUp","ignoreClick","useState","listboxFocusRequested","requestListboxFocus","focusListboxIfRequested","useCallback","current","focus","updateListboxRef","listboxElement","handleListboxRef","useEffect","createHandleMouseDown","otherHandlers","event","_otherHandlers$onMous","onMouseDown","call","defaultPrevented","createHandleButtonClick","_otherHandlers$onClic","onClick","createHandleButtonKeyDown","_otherHandlers$onKeyD","onKeyDown","key","preventDefault","createHandleListboxKeyUp","_otherHandlers$onKeyU","onKeyUp","closingKeys","includes","_buttonRef$current","createHandleListboxItemClick","_otherHandlers$onClic2","createHandleListboxBlur","_otherHandlers$blur","blur","listboxReducer","action","newState","type","keyDown","optionToSelect","highlightedIndex","selectedValue","setControlledValue","optionsChange","selectedOptionIndex","findIndex","o","optionComparer","component","ref","getButtonProps","getRootProps","buttonActive","active","buttonFocusVisible","focusVisible","selectedOption","useMemo","_props$options$find","filter","find","useListboxParameters","id","isOptionDisabled","_o$disabled","v","newOptions","map","_o$disabled2","option","_option$value","_option$value2","stateReducer","getListboxProps","getOptionProps","getOptionState","highlightedOption","useDebugValue","onBlur"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useButton } from '../ButtonUnstyled';\nimport { useListbox, defaultListboxReducer, ActionTypes } from '../ListboxUnstyled';\n\nfunction useSelect(props) {\n  const {\n    buttonComponent,\n    buttonRef: buttonRefProp,\n    defaultValue,\n    disabled = false,\n    listboxId,\n    listboxRef: listboxRefProp,\n    multiple = false,\n    onChange,\n    onOpenChange,\n    open,\n    options,\n    value: valueProp\n  } = props;\n  const buttonRef = React.useRef(null);\n  const handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  const listboxRef = React.useRef(null);\n  const intermediaryListboxRef = useForkRef(listboxRefProp, listboxRef);\n  const [value, setValue] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'SelectUnstyled',\n    state: 'value'\n  }); // prevents closing the listbox on keyUp right after opening it\n\n  const ignoreEnterKeyUp = React.useRef(false); // prevents reopening the listbox when button is clicked\n  // (listbox closes on lost focus, then immediately reopens on click)\n\n  const ignoreClick = React.useRef(false); // Ensure the listbox is focused after opening\n\n  const [listboxFocusRequested, requestListboxFocus] = React.useState(false);\n  const focusListboxIfRequested = React.useCallback(() => {\n    if (listboxFocusRequested && listboxRef.current != null) {\n      listboxRef.current.focus();\n      requestListboxFocus(false);\n    }\n  }, [listboxFocusRequested]);\n\n  const updateListboxRef = listboxElement => {\n    listboxRef.current = listboxElement;\n    focusListboxIfRequested();\n  };\n\n  const handleListboxRef = useForkRef(intermediaryListboxRef, updateListboxRef);\n  React.useEffect(() => {\n    focusListboxIfRequested();\n  }, [focusListboxIfRequested]);\n  React.useEffect(() => {\n    requestListboxFocus(open != null ? open : false);\n  }, [open]);\n\n  const createHandleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n\n    if (!event.defaultPrevented && open) {\n      ignoreClick.current = true;\n    }\n  };\n\n  const createHandleButtonClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n\n    if (!event.defaultPrevented && !ignoreClick.current) {\n      onOpenChange == null ? void 0 : onOpenChange(!open);\n    }\n\n    ignoreClick.current = false;\n  };\n\n  const createHandleButtonKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === 'Enter') {\n      ignoreEnterKeyUp.current = true;\n    }\n\n    if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      onOpenChange == null ? void 0 : onOpenChange(true);\n    }\n  };\n\n  const createHandleListboxKeyUp = otherHandlers => event => {\n    var _otherHandlers$onKeyU;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const closingKeys = multiple ? ['Escape'] : ['Escape', 'Enter', ' '];\n\n    if (open && !ignoreEnterKeyUp.current && closingKeys.includes(event.key)) {\n      var _buttonRef$current;\n\n      buttonRef == null ? void 0 : (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();\n    }\n\n    ignoreEnterKeyUp.current = false;\n  };\n\n  const createHandleListboxItemClick = otherHandlers => event => {\n    var _otherHandlers$onClic2;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (!multiple) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n\n  const createHandleListboxBlur = otherHandlers => event => {\n    var _otherHandlers$blur;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$blur = otherHandlers.blur) == null ? void 0 : _otherHandlers$blur.call(otherHandlers, event);\n\n    if (!event.defaultPrevented) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n\n  const listboxReducer = (state, action) => {\n    const newState = defaultListboxReducer(state, action); // change selection when listbox is closed\n\n    if (action.type === ActionTypes.keyDown && !open && (action.event.key === 'ArrowUp' || action.event.key === 'ArrowDown')) {\n      const optionToSelect = action.props.options[newState.highlightedIndex];\n      return _extends({}, newState, {\n        selectedValue: optionToSelect\n      });\n    }\n\n    if (action.type === ActionTypes.blur || action.type === ActionTypes.setControlledValue || action.type === ActionTypes.optionsChange) {\n      const selectedOptionIndex = action.props.options.findIndex(o => action.props.optionComparer(o, newState.selectedValue));\n      return _extends({}, newState, {\n        highlightedIndex: selectedOptionIndex\n      });\n    }\n\n    return newState;\n  };\n\n  const {\n    getRootProps: getButtonProps,\n    active: buttonActive,\n    focusVisible: buttonFocusVisible\n  } = useButton({\n    component: buttonComponent,\n    disabled,\n    ref: handleButtonRef\n  });\n  const selectedOption = React.useMemo(() => {\n    var _props$options$find;\n\n    return props.multiple ? props.options.filter(o => value.includes(o.value)) : (_props$options$find = props.options.find(o => o.value === value)) != null ? _props$options$find : null;\n  }, [props.multiple, props.options, value]);\n  let useListboxParameters;\n\n  if (props.multiple) {\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled;\n\n        return (_o$disabled = o == null ? void 0 : o.disabled) != null ? _o$disabled : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: true,\n      onChange: newOptions => {\n        setValue(newOptions.map(o => o.value));\n        onChange == null ? void 0 : onChange(newOptions.map(o => o.value));\n      },\n      options,\n      value: selectedOption\n    };\n  } else {\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled2;\n\n        return (_o$disabled2 = o == null ? void 0 : o.disabled) != null ? _o$disabled2 : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: false,\n      onChange: option => {\n        var _option$value, _option$value2;\n\n        setValue((_option$value = option == null ? void 0 : option.value) != null ? _option$value : null);\n        onChange == null ? void 0 : onChange((_option$value2 = option == null ? void 0 : option.value) != null ? _option$value2 : null);\n      },\n      options,\n      stateReducer: listboxReducer,\n      value: selectedOption\n    };\n  }\n\n  const {\n    getRootProps: getListboxProps,\n    getOptionProps,\n    getOptionState,\n    highlightedOption\n  } = useListbox(useListboxParameters);\n  React.useDebugValue({\n    value,\n    open,\n    highlightedOption\n  });\n  return {\n    buttonActive,\n    buttonFocusVisible,\n    disabled,\n    getButtonProps: otherHandlers => {\n      return _extends({}, getButtonProps(_extends({}, otherHandlers, {\n        onClick: createHandleButtonClick(otherHandlers),\n        onMouseDown: createHandleMouseDown(otherHandlers),\n        onKeyDown: createHandleButtonKeyDown(otherHandlers)\n      })), {\n        'aria-expanded': open,\n        'aria-haspopup': 'listbox'\n      });\n    },\n    getListboxProps: otherHandlers => getListboxProps(_extends({}, otherHandlers, {\n      onBlur: createHandleListboxBlur(otherHandlers),\n      onKeyUp: createHandleListboxKeyUp(otherHandlers)\n    })),\n    getOptionProps: (option, otherHandlers) => {\n      return getOptionProps(option, _extends({}, otherHandlers, {\n        onClick: createHandleListboxItemClick(otherHandlers)\n      }));\n    },\n    getOptionState,\n    open,\n    value\n  };\n}\n\nexport default useSelect;"]},"metadata":{},"sourceType":"module"}