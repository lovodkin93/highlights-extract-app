{"ast":null,"code":"import _slicedToArray from \"C:/Users/aviv/OneDrive/Desktop/highlights-extract-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"autoFocus\", \"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"defaultListboxOpen\", \"defaultValue\", \"disabled\", \"listboxOpen\", \"onChange\", \"onListboxOpenChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useControlled as useControlled } from '@mui/utils';\nimport { flattenOptionGroups, getOptionsFromChildren } from '../SelectUnstyled/utils';\nimport useSelect from '../SelectUnstyled/useSelect';\nimport { appendOwnerState } from '../utils';\nimport PopperUnstyled from '../PopperUnstyled';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport composeClasses from '../composeClasses';\nimport { getSelectUnstyledUtilityClass } from '../SelectUnstyled/selectUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction defaultRenderMultipleValues(selectedOptions) {\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: selectedOptions.map(function (o) {\n      return o.label;\n    }).join(', ')\n  });\n}\n\nfunction useUtilityClasses(ownerState) {\n  var active = ownerState.active,\n      disabled = ownerState.disabled,\n      open = ownerState.open,\n      focusVisible = ownerState.focusVisible;\n  var slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible', active && 'active', open && 'expanded'],\n    listbox: ['listbox', disabled && 'disabled'],\n    popper: ['popper']\n  };\n  return composeClasses(slots, getSelectUnstyledUtilityClass, {});\n}\n/**\n * The foundation for building custom-styled multi-selection select components.\n */\n\n\nvar MultiSelectUnstyled = /*#__PURE__*/React.forwardRef(function MultiSelectUnstyled(props, ref) {\n  var _props$renderValue, _ref, _components$Listbox, _components$Popper, _componentsProps$list, _componentsProps$list2, _componentsProps$root, _componentsProps$list3, _componentsProps$popp;\n\n  var autoFocus = props.autoFocus,\n      children = props.children,\n      className = props.className,\n      component = props.component,\n      _props$components = props.components,\n      components = _props$components === void 0 ? {} : _props$components,\n      _props$componentsProp = props.componentsProps,\n      componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n      _props$defaultListbox = props.defaultListboxOpen,\n      defaultListboxOpen = _props$defaultListbox === void 0 ? false : _props$defaultListbox,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? [] : _props$defaultValue,\n      disabledProp = props.disabled,\n      listboxOpenProp = props.listboxOpen,\n      onChange = props.onChange,\n      onListboxOpenChange = props.onListboxOpenChange,\n      valueProp = props.value,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var renderValue = (_props$renderValue = props.renderValue) != null ? _props$renderValue : defaultRenderMultipleValues;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      groupedOptions = _React$useState2[0],\n      setGroupedOptions = _React$useState2[1];\n\n  var options = React.useMemo(function () {\n    return flattenOptionGroups(groupedOptions);\n  }, [groupedOptions]);\n\n  var _useControlled = useControlled({\n    controlled: listboxOpenProp,\n    default: defaultListboxOpen,\n    name: 'MultiSelectUnstyled',\n    state: 'listboxOpen'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      listboxOpen = _useControlled2[0],\n      setListboxOpen = _useControlled2[1];\n\n  React.useEffect(function () {\n    setGroupedOptions(getOptionsFromChildren(children));\n  }, [children]);\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      buttonDefined = _React$useState4[0],\n      setButtonDefined = _React$useState4[1];\n\n  var buttonRef = React.useRef(null);\n  var Button = (_ref = component != null ? component : components.Root) != null ? _ref : 'button';\n  var ListboxRoot = (_components$Listbox = components.Listbox) != null ? _components$Listbox : 'ul';\n  var Popper = (_components$Popper = components.Popper) != null ? _components$Popper : PopperUnstyled;\n\n  var handleButtonRefChange = function handleButtonRefChange(element) {\n    buttonRef.current = element;\n\n    if (element != null) {\n      setButtonDefined(true);\n    }\n  };\n\n  var handleButtonRef = useForkRef(ref, handleButtonRefChange);\n  React.useEffect(function () {\n    if (autoFocus) {\n      buttonRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  var handleOpenChange = function handleOpenChange(isOpen) {\n    setListboxOpen(isOpen);\n    onListboxOpenChange == null ? void 0 : onListboxOpenChange(isOpen);\n  };\n\n  var _useSelect = useSelect({\n    buttonComponent: Button,\n    buttonRef: handleButtonRef,\n    defaultValue: defaultValue,\n    disabled: disabledProp,\n    listboxId: (_componentsProps$list = componentsProps.listbox) == null ? void 0 : _componentsProps$list.id,\n    listboxRef: (_componentsProps$list2 = componentsProps.listbox) == null ? void 0 : _componentsProps$list2.ref,\n    multiple: true,\n    onChange: onChange,\n    onOpenChange: handleOpenChange,\n    open: listboxOpen,\n    options: options,\n    value: valueProp\n  }),\n      buttonActive = _useSelect.buttonActive,\n      buttonFocusVisible = _useSelect.buttonFocusVisible,\n      disabled = _useSelect.disabled,\n      getButtonProps = _useSelect.getButtonProps,\n      getListboxProps = _useSelect.getListboxProps,\n      getOptionProps = _useSelect.getOptionProps,\n      getOptionState = _useSelect.getOptionState,\n      value = _useSelect.value;\n\n  var ownerState = _extends({}, props, {\n    active: buttonActive,\n    defaultListboxOpen: defaultListboxOpen,\n    disabled: disabled,\n    focusVisible: buttonFocusVisible,\n    open: listboxOpen,\n    renderValue: renderValue,\n    value: value\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var selectedOptions = React.useMemo(function () {\n    if (value == null) {\n      return [];\n    }\n\n    return options.filter(function (o) {\n      return value.includes(o.value);\n    });\n  }, [options, value]);\n  var buttonProps = appendOwnerState(Button, _extends({}, other, componentsProps.root, getButtonProps(), {\n    className: clsx(className, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className, classes.root)\n  }), ownerState);\n  var listboxProps = appendOwnerState(ListboxRoot, _extends({}, componentsProps.listbox, getListboxProps(), {\n    className: clsx((_componentsProps$list3 = componentsProps.listbox) == null ? void 0 : _componentsProps$list3.className, classes.listbox)\n  }), ownerState);\n  var popperProps = appendOwnerState(Popper, _extends({\n    open: listboxOpen,\n    anchorEl: buttonRef.current,\n    placement: 'bottom-start',\n    disablePortal: true,\n    role: undefined\n  }, componentsProps.popper, {\n    className: clsx((_componentsProps$popp = componentsProps.popper) == null ? void 0 : _componentsProps$popp.className, classes.popper)\n  }), ownerState);\n  var context = {\n    getOptionProps: getOptionProps,\n    getOptionState: getOptionState\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Button, _extends({}, buttonProps, {\n      children: renderValue(selectedOptions)\n    })), buttonDefined && /*#__PURE__*/_jsx(Popper, _extends({}, popperProps, {\n      children: /*#__PURE__*/_jsx(ListboxRoot, _extends({}, listboxProps, {\n        children: /*#__PURE__*/_jsx(SelectUnstyledContext.Provider, {\n          value: context,\n          children: children\n        })\n      }))\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MultiSelectUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the select element is focused during the first mount\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Select.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Listbox: PropTypes.elementType,\n    Popper: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    listbox: PropTypes.object,\n    popper: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the select will be initially open.\n   * @default false\n   */\n  defaultListboxOpen: PropTypes.bool,\n\n  /**\n   * The default selected values. Use when the component is not controlled.\n   * @default []\n   */\n  defaultValue: PropTypes.array,\n\n  /**\n   * If `true`, the select is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Controls the open state of the select's listbox.\n   * @default undefined\n   */\n  listboxOpen: PropTypes.bool,\n\n  /**\n   * Callback fired when an option is selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see listboxOpen).\n   */\n  onListboxOpenChange: PropTypes.func,\n\n  /**\n   * Function that customizes the rendering of the selected values.\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * The selected values.\n   * Set to an empty array to deselect all options.\n   */\n  value: PropTypes.array\n} : void 0;\n/**\n * The foundation for building custom-styled multi-selection select components.\n *\n * Demos:\n *\n * - [Selects](https://mui.com/components/selects/)\n *\n * API:\n *\n * - [MultiSelectUnstyled API](https://mui.com/api/multi-select-unstyled/)\n */\n\nexport default MultiSelectUnstyled;","map":{"version":3,"sources":["C:/Users/aviv/OneDrive/Desktop/highlights-extract-app/node_modules/@mui/base/MultiSelectUnstyled/MultiSelectUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","unstable_useForkRef","useForkRef","unstable_useControlled","useControlled","flattenOptionGroups","getOptionsFromChildren","useSelect","appendOwnerState","PopperUnstyled","SelectUnstyledContext","composeClasses","getSelectUnstyledUtilityClass","jsx","_jsx","jsxs","_jsxs","defaultRenderMultipleValues","selectedOptions","Fragment","children","map","o","label","join","useUtilityClasses","ownerState","active","disabled","open","focusVisible","slots","root","listbox","popper","MultiSelectUnstyled","forwardRef","props","ref","_props$renderValue","_ref","_components$Listbox","_components$Popper","_componentsProps$list","_componentsProps$list2","_componentsProps$root","_componentsProps$list3","_componentsProps$popp","autoFocus","className","component","components","componentsProps","defaultListboxOpen","defaultValue","disabledProp","listboxOpenProp","listboxOpen","onChange","onListboxOpenChange","valueProp","value","other","renderValue","useState","groupedOptions","setGroupedOptions","options","useMemo","controlled","default","name","state","setListboxOpen","useEffect","buttonDefined","setButtonDefined","buttonRef","useRef","Button","Root","ListboxRoot","Listbox","Popper","handleButtonRefChange","element","current","handleButtonRef","focus","handleOpenChange","isOpen","buttonComponent","listboxId","id","listboxRef","multiple","onOpenChange","buttonActive","buttonFocusVisible","getButtonProps","getListboxProps","getOptionProps","getOptionState","classes","filter","includes","buttonProps","listboxProps","popperProps","anchorEl","placement","disablePortal","role","undefined","context","Provider","process","env","NODE_ENV","propTypes","bool","node","string","elementType","shape","object","array","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoFocus\", \"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"defaultListboxOpen\", \"defaultValue\", \"disabled\", \"listboxOpen\", \"onChange\", \"onListboxOpenChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useControlled as useControlled } from '@mui/utils';\nimport { flattenOptionGroups, getOptionsFromChildren } from '../SelectUnstyled/utils';\nimport useSelect from '../SelectUnstyled/useSelect';\nimport { appendOwnerState } from '../utils';\nimport PopperUnstyled from '../PopperUnstyled';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport composeClasses from '../composeClasses';\nimport { getSelectUnstyledUtilityClass } from '../SelectUnstyled/selectUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction defaultRenderMultipleValues(selectedOptions) {\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: selectedOptions.map(o => o.label).join(', ')\n  });\n}\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    active,\n    disabled,\n    open,\n    focusVisible\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible', active && 'active', open && 'expanded'],\n    listbox: ['listbox', disabled && 'disabled'],\n    popper: ['popper']\n  };\n  return composeClasses(slots, getSelectUnstyledUtilityClass, {});\n}\n/**\n * The foundation for building custom-styled multi-selection select components.\n */\n\n\nconst MultiSelectUnstyled = /*#__PURE__*/React.forwardRef(function MultiSelectUnstyled(props, ref) {\n  var _props$renderValue, _ref, _components$Listbox, _components$Popper, _componentsProps$list, _componentsProps$list2, _componentsProps$root, _componentsProps$list3, _componentsProps$popp;\n\n  const {\n    autoFocus,\n    children,\n    className,\n    component,\n    components = {},\n    componentsProps = {},\n    defaultListboxOpen = false,\n    defaultValue = [],\n    disabled: disabledProp,\n    listboxOpen: listboxOpenProp,\n    onChange,\n    onListboxOpenChange,\n    value: valueProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const renderValue = (_props$renderValue = props.renderValue) != null ? _props$renderValue : defaultRenderMultipleValues;\n  const [groupedOptions, setGroupedOptions] = React.useState([]);\n  const options = React.useMemo(() => flattenOptionGroups(groupedOptions), [groupedOptions]);\n  const [listboxOpen, setListboxOpen] = useControlled({\n    controlled: listboxOpenProp,\n    default: defaultListboxOpen,\n    name: 'MultiSelectUnstyled',\n    state: 'listboxOpen'\n  });\n  React.useEffect(() => {\n    setGroupedOptions(getOptionsFromChildren(children));\n  }, [children]);\n  const [buttonDefined, setButtonDefined] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const Button = (_ref = component != null ? component : components.Root) != null ? _ref : 'button';\n  const ListboxRoot = (_components$Listbox = components.Listbox) != null ? _components$Listbox : 'ul';\n  const Popper = (_components$Popper = components.Popper) != null ? _components$Popper : PopperUnstyled;\n\n  const handleButtonRefChange = element => {\n    buttonRef.current = element;\n\n    if (element != null) {\n      setButtonDefined(true);\n    }\n  };\n\n  const handleButtonRef = useForkRef(ref, handleButtonRefChange);\n  React.useEffect(() => {\n    if (autoFocus) {\n      buttonRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  const handleOpenChange = isOpen => {\n    setListboxOpen(isOpen);\n    onListboxOpenChange == null ? void 0 : onListboxOpenChange(isOpen);\n  };\n\n  const {\n    buttonActive,\n    buttonFocusVisible,\n    disabled,\n    getButtonProps,\n    getListboxProps,\n    getOptionProps,\n    getOptionState,\n    value\n  } = useSelect({\n    buttonComponent: Button,\n    buttonRef: handleButtonRef,\n    defaultValue,\n    disabled: disabledProp,\n    listboxId: (_componentsProps$list = componentsProps.listbox) == null ? void 0 : _componentsProps$list.id,\n    listboxRef: (_componentsProps$list2 = componentsProps.listbox) == null ? void 0 : _componentsProps$list2.ref,\n    multiple: true,\n    onChange,\n    onOpenChange: handleOpenChange,\n    open: listboxOpen,\n    options,\n    value: valueProp\n  });\n\n  const ownerState = _extends({}, props, {\n    active: buttonActive,\n    defaultListboxOpen,\n    disabled,\n    focusVisible: buttonFocusVisible,\n    open: listboxOpen,\n    renderValue,\n    value\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const selectedOptions = React.useMemo(() => {\n    if (value == null) {\n      return [];\n    }\n\n    return options.filter(o => value.includes(o.value));\n  }, [options, value]);\n  const buttonProps = appendOwnerState(Button, _extends({}, other, componentsProps.root, getButtonProps(), {\n    className: clsx(className, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className, classes.root)\n  }), ownerState);\n  const listboxProps = appendOwnerState(ListboxRoot, _extends({}, componentsProps.listbox, getListboxProps(), {\n    className: clsx((_componentsProps$list3 = componentsProps.listbox) == null ? void 0 : _componentsProps$list3.className, classes.listbox)\n  }), ownerState);\n  const popperProps = appendOwnerState(Popper, _extends({\n    open: listboxOpen,\n    anchorEl: buttonRef.current,\n    placement: 'bottom-start',\n    disablePortal: true,\n    role: undefined\n  }, componentsProps.popper, {\n    className: clsx((_componentsProps$popp = componentsProps.popper) == null ? void 0 : _componentsProps$popp.className, classes.popper)\n  }), ownerState);\n  const context = {\n    getOptionProps,\n    getOptionState\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Button, _extends({}, buttonProps, {\n      children: renderValue(selectedOptions)\n    })), buttonDefined && /*#__PURE__*/_jsx(Popper, _extends({}, popperProps, {\n      children: /*#__PURE__*/_jsx(ListboxRoot, _extends({}, listboxProps, {\n        children: /*#__PURE__*/_jsx(SelectUnstyledContext.Provider, {\n          value: context,\n          children: children\n        })\n      }))\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MultiSelectUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the select element is focused during the first mount\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Select.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Listbox: PropTypes.elementType,\n    Popper: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    listbox: PropTypes.object,\n    popper: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the select will be initially open.\n   * @default false\n   */\n  defaultListboxOpen: PropTypes.bool,\n\n  /**\n   * The default selected values. Use when the component is not controlled.\n   * @default []\n   */\n  defaultValue: PropTypes.array,\n\n  /**\n   * If `true`, the select is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Controls the open state of the select's listbox.\n   * @default undefined\n   */\n  listboxOpen: PropTypes.bool,\n\n  /**\n   * Callback fired when an option is selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see listboxOpen).\n   */\n  onListboxOpenChange: PropTypes.func,\n\n  /**\n   * Function that customizes the rendering of the selected values.\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * The selected values.\n   * Set to an empty array to deselect all options.\n   */\n  value: PropTypes.array\n} : void 0;\n/**\n * The foundation for building custom-styled multi-selection select components.\n *\n * Demos:\n *\n * - [Selects](https://mui.com/components/selects/)\n *\n * API:\n *\n * - [MultiSelectUnstyled API](https://mui.com/api/multi-select-unstyled/)\n */\n\nexport default MultiSelectUnstyled;"]},"metadata":{},"sourceType":"module"}