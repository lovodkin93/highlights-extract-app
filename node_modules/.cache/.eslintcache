[{"C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\index.js":"1","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\reportWebVitals.js":"2","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\App.js":"3","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\GuidedAnnotation.js":"4","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\Annotation.js":"5","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\StartPage.js":"6","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\Instructions.js":"7","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\Annotation_event_handlers.js":"8","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\DocWord.js":"9","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\ResponsiveAppBar.js":"10","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\BackButton.js":"11","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\SummaryWord.js":"12","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\styled-sliders.js":"13","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\GuidedAnnotation_utils.js":"14","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\Tutorial.js":"15","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\Tutorial_utils.js":"16"},{"size":706,"mtime":1648483402725,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1645787016766,"results":"19","hashOfConfig":"18"},{"size":70814,"mtime":1648754648176,"results":"20","hashOfConfig":"18"},{"size":357,"mtime":1646318356436,"results":"21","hashOfConfig":"18"},{"size":19915,"mtime":1648730381982,"results":"22","hashOfConfig":"18"},{"size":2508,"mtime":1647878770931,"results":"23","hashOfConfig":"18"},{"size":8185,"mtime":1648741136201,"results":"24","hashOfConfig":"18"},{"size":11460,"mtime":1648659290796,"results":"25","hashOfConfig":"18"},{"size":4835,"mtime":1648393288637,"results":"26","hashOfConfig":"18"},{"size":8809,"mtime":1648720116230,"results":"27","hashOfConfig":"18"},{"size":439,"mtime":1646496707735,"results":"28","hashOfConfig":"18"},{"size":2305,"mtime":1648393239422,"results":"29","hashOfConfig":"18"},{"size":2272,"mtime":1648137057484,"results":"30","hashOfConfig":"18"},{"size":4838,"mtime":1648664170213,"results":"31","hashOfConfig":"18"},{"size":29852,"mtime":1648754755297,"results":"32","hashOfConfig":"18"},{"size":3956,"mtime":1648754802657,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"iqi5he",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":72,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"37"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"37"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\index.js",[],[],["89","90"],"C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\App.js",["91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120"],[],"C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\GuidedAnnotation.js",[],[],"C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\Annotation.js",["121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142"],[],"C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\StartPage.js",["143","144","145","146"],[],"import { Link } from 'react-router-dom';\r\nimport * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\n\r\n\r\nconst pages = {'Instructions': 'instructions', 'Guided Annotation': 'guidedAnnotation'}; \r\n\r\n\r\n\r\nconst StartPage = () => {\r\n  return (\r\n    <>\r\n      {/* <header className='GeneralPageHeader'>\r\n          <h2>Highlighting Extraction UI</h2>\r\n      </header> */}\r\n\r\n      <AppBar id=\"startPageAppBar\" position=\"static\">\r\n      <div>\r\n        <Container maxWidth=\"xl\">\r\n          <Toolbar disableGutters>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\r\n          >\r\n            Highlighting Extraction UI\r\n          </Typography>\r\n\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ my: 2, flexGrow: 1, display: {xs: 'flex', md: 'none' } }}\r\n          >\r\n            Highlighting Extraction UI\r\n          </Typography>\r\n          </Toolbar>\r\n        </Container>\r\n      </div>\r\n    </AppBar>\r\n\r\n    <div className=\"jumbotron text-center StartPageBody\" /*className='StartPageBody'*/>\r\n        <div className='StartPageText'>\r\n          <p id=\"StartPageTitle\">\r\n            Welcome to\r\n            <br></br>\r\n            the Highlight Extraction UI\r\n          </p>\r\n          <p id=\"StartPageContent\">Before starting annotating, please read the Instructions first and practice using the Guided Annotation option.</p>\r\n\r\n          <div id=\"ButtonGroupBox\">\r\n            {/* <ButtonGroup> */}\r\n              <Button className=\"StartPageButton\" variant=\"contained\" color=\"primary\" component={Link} to={'/instructions'} >Instructions</Button>\r\n              <Button className=\"StartPageButton\" variant=\"contained\" color=\"secondary\" component={Link} to={'/guidedAnnotation'}>Guided<br></br>Annotation</Button>\r\n              <Button className=\"StartPageButton\" variant=\"contained\" color=\"success\" component={Link} to={'/annotation'}>Annotation</Button>\r\n            {/* </ButtonGroup> */}\r\n          </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default StartPage","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\Instructions.js",["147"],[],"C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\Annotation_event_handlers.js",["148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219"],[],"const MachineStateHandler = (summary_json,\r\n                                 StateMachineState, SetStateMachineState,\r\n                                 SetInfoMessage, handleErrorOpen, isPunct,\r\n                                 CurrSentInd, SetCurrSentInd, SetSummaryShadow,\r\n                                 AlignmentCount, SetAlignmentCount,\r\n                                 approveHighlightHandler,\r\n                                 clickedWordInfo, forceState, \r\n                                 StartReviseStateHandler, ExitReviseHandler,\r\n                                 ReviseChooseAlignHandler,\r\n                                 isBackBtn,\r\n                                 setPrevSummaryJsonRevise, setPrevDocJsonRevise) => {\r\n\r\n\r\n\r\n    // forceState: \"SENTENCE END\"\r\n    if (forceState === \"SENTENCE END\"){\r\n      console.log(`forceState: \\\"SENTENCE END\\\"`);\r\n      SetStateMachineState(\"SENTENCE END\");\r\n      SetInfoMessage(\"Finished sentence highlighting. When ready, press \\\"NEXT SENTENCE\\\".\");\r\n    }\r\n\r\n    // forceState: \"SUMMARY END\"\r\n    else if (forceState === \"SUMMARY END\"){\r\n      console.log(`forceState: \\\"SUMMARY END\\\"`);\r\n      SetStateMachineState(\"SUMMARY END\");\r\n      SetInfoMessage(\"Finished summary highlighting. When ready, press \\\"SUBMIT\\\".\");\r\n    }\r\n\r\n    // forceState: \"ANNOTATION\"\r\n    else if (forceState === \"ANNOTATION\"){\r\n      console.log(`forceState: \\\"ANNOTATION\\\"`);\r\n      SetStateMachineState(\"ANNOTATION\");\r\n      SetInfoMessage(\"Highlight document and summary alignment and then press \\\"CONFIRM\\\".\");\r\n    }\r\n\r\n    // forceState: \"REVISE HOVER\"\r\n    else if (forceState === \"REVISE HOVER\"){\r\n      StartReviseStateHandler(isBackBtn);\r\n      console.log(`forceState: \\\"REVISE HOVER\\\"`);\r\n      SetStateMachineState(\"REVISE HOVER\");\r\n      SetInfoMessage(\"Choose alignment to revise.\");\r\n    }\r\n\r\n    // forceState: \"FINISH REVISION\" --> namely go back to state before revision with all-highlighted updated\r\n    else if (forceState === \"FINISH REVISION\"){\r\n      const prev_state = ExitReviseHandler();\r\n      if ([\"ANNOTATION\", \"SENTENCE START\".includes(prev_state)]) {\r\n        SetInfoMessage(\"Highlight document and summary alignment and then press \\\"CONFIRM\\\".\");\r\n      } else if (prev_state === \"SENTENCE END\"){\r\n        SetInfoMessage(\"Finished sentence highlighting. When ready, press \\\"NEXT SENTENCE\\\".\");\r\n      } else if (prev_state === \"SUMMARY END\") {\r\n        SetInfoMessage(\"Finished summary highlighting. When ready, press \\\"SUBMIT\\\".\");\r\n      } else{\r\n        alert(`Coming back from Revision to an unsupported state... state is ${prev_state}`);\r\n      }\r\n    }\r\n\r\n    // \"START\" state --> \"ANNOTATION\" state\r\n    else if (StateMachineState === \"START\"){\r\n        console.log(`Old state: \\\"START\\\"; New state: \\\"ANNOTATION\\\" with SentInd=${CurrSentInd+1}.`);\r\n        SetStateMachineState(\"ANNOTATION\");\r\n        SetSummaryShadow(CurrSentInd+1);\r\n        SetCurrSentInd(CurrSentInd+1);\r\n        SetInfoMessage(\"Highlight document and summary alignment and then press \\\"CONFIRM\\\".\");\r\n    }\r\n    \r\n    // \"ANNOTATION\" state --> \"ANNOTATION\" with next alignment\r\n    else if (StateMachineState === \"ANNOTATION\"){\r\n      console.log(`curr AlignmentCount is ${AlignmentCount}`);\r\n      console.log(`Old state: \\\"ANNOTATION\\\"; New state: \\\"ANNOTATION\\\" with AlignmentCount=${AlignmentCount}.`);\r\n      approveHighlightHandler();\r\n      SetAlignmentCount(AlignmentCount+1);\r\n      SetInfoMessage(\"Highlight document and summary alignment and then press \\\"CONFIRM\\\".\");\r\n    }\r\n\r\n    // \"SENTENCE END\" state --> \"SENTENCE START\" \r\n    else if (StateMachineState === \"SENTENCE END\"){\r\n      // adding last sentence alignment\r\n      console.log(`curr AlignmentCount is ${AlignmentCount}`);\r\n      approveHighlightHandler();\r\n      SetAlignmentCount(AlignmentCount+1);\r\n\r\n      // moving to next sentence\r\n      // update of summary sentence shadow is done in App.js in a designated useEffect\r\n      console.log(`Old state: \\\"SENTENCE END\\\"; New state: \\\"SENTENCE START\\\" with SentInd=${CurrSentInd+1}.`);\r\n      SetStateMachineState(\"SENTENCE START\");\r\n      SetCurrSentInd(CurrSentInd+1);\r\n      SetInfoMessage(\"Highlight document and summary alignment and then press \\\"CONFIRM\\\".\");\r\n    }\r\n      // \"SENTENCE START\" state --> \"ANNOTATION\" with next alignment \r\n      else if (StateMachineState === \"SENTENCE START\"){\r\n        console.log(`curr AlignmentCount is ${AlignmentCount}`);\r\n        console.log(`Old state: \\\"SENTENCE START\\\"; New state: \\\"ANNOTATION\\\" with AlignmentCount=${AlignmentCount}.`);\r\n        SetStateMachineState(\"ANNOTATION\");\r\n        approveHighlightHandler();\r\n        SetAlignmentCount(AlignmentCount+1);\r\n        SetInfoMessage(\"Highlight document and summary alignment and then press \\\"CONFIRM\\\".\");\r\n  \r\n      }\r\n      // \"SUMMARY END\" state --> \"SUBMIT\" state \r\n      else if (StateMachineState === \"SUMMARY END\"){\r\n        console.log(`Old state: \\\"SUMMARY END\\\"; New state: \\\"SUBMIT\\\"`);\r\n        SetStateMachineState(\"SUBMIT\");\r\n        SetInfoMessage(\"\");\r\n      }\r\n\r\n      // \"REVISE HOVER\" state --> \"REVISE CLICKED\" state \r\n      else if (StateMachineState === \"REVISE HOVER\"){\r\n        console.log(`Old state: \\\"REVISE HOVER\\\"; New state: \\\"REVISE CLICKED\\\"`);\r\n        ReviseChooseAlignHandler(clickedWordInfo);\r\n        SetStateMachineState(\"REVISE CLICKED\");\r\n        SetInfoMessage(\"\");\r\n      }\r\n\r\n      // \"REVISE CLICKED\" state --> \"REVISE HOVER\" state \r\n      else if (StateMachineState === \"REVISE CLICKED\"){\r\n        console.log(`curr AlignmentCount is ${AlignmentCount}`);\r\n        console.log(`Old state: \\\"REVISE CLICKED\\\"; New state: \\\"REVISE HOVER\\\"`);\r\n        SetStateMachineState(\"REVISE HOVER\");\r\n        approveHighlightHandler();\r\n        SetAlignmentCount(AlignmentCount+1);\r\n        SetInfoMessage(\"Choose alignment to revise.\");\r\n        setPrevSummaryJsonRevise([]);\r\n        setPrevDocJsonRevise([]);\r\n      }\r\n  }\r\n\r\n  MachineStateHandler.defaultProps = {\r\n    forceState: '',\r\n    isBackBtn: false\r\n  }\r\n\r\n\r\n\r\n  /************************************************************************************************************************************/\r\n\r\n\r\n  const g_MachineStateHandler = (summary_json,\r\n    StateMachineState, SetStateMachineState,\r\n    SetInfoMessage, handleErrorOpen, isPunct,\r\n    CurrSentInd, SetCurrSentInd, SetSummaryShadow,\r\n    AlignmentCount, SetAlignmentCount,\r\n    approveHighlightHandler,\r\n    clickedWordInfo, forceState, \r\n    StartReviseStateHandler, ExitReviseHandler,\r\n    ReviseChooseAlignHandler,\r\n    isBackBtn,\r\n    setPrevSummaryJsonRevise, setPrevDocJsonRevise,\r\n    g_StateMachineStateIndex, g_setStateMachineStateIndex) => {\r\n\r\n\r\n\r\n// forceState: \"SENTENCE END\"\r\nif (forceState === \"SENTENCE END\"){\r\nconsole.log(`forceState: \\\"SENTENCE END\\\"`);\r\nSetStateMachineState(\"SENTENCE END\");\r\nSetInfoMessage(\"Finished sentence highlighting. When ready, press \\\"NEXT SENTENCE\\\".\");\r\n}\r\n\r\n// forceState: \"SUMMARY END\"\r\nelse if (forceState === \"SUMMARY END\"){\r\nconsole.log(`forceState: \\\"SUMMARY END\\\"`);\r\nSetStateMachineState(\"SUMMARY END\");\r\nSetInfoMessage(\"Finished summary highlighting. When ready, press \\\"SUBMIT\\\".\");\r\n}\r\n\r\n// forceState: \"ANNOTATION\"\r\nelse if (forceState === \"ANNOTATION\"){\r\nconsole.log(`forceState: \\\"ANNOTATION\\\"`);\r\nSetStateMachineState(\"ANNOTATION\");\r\nSetInfoMessage(\"Highlight document and summary alignment and then press \\\"CONFIRM\\\".\");\r\n}\r\n\r\n// forceState: \"REVISE HOVER\"\r\nelse if (forceState === \"REVISE HOVER\"){\r\nStartReviseStateHandler(isBackBtn);\r\nconsole.log(`forceState: \\\"REVISE HOVER\\\"`);\r\nSetStateMachineState(\"REVISE HOVER\");\r\nSetInfoMessage(\"Choose alignment to revise.\");\r\n}\r\n\r\n// forceState: \"FINISH REVISION\" --> namely go back to state before revision with all-highlighted updated\r\nelse if (forceState === \"FINISH REVISION\"){\r\nconst prev_state = ExitReviseHandler();\r\nif ([\"ANNOTATION\", \"SENTENCE START\".includes(prev_state)]) {\r\nSetInfoMessage(\"Highlight document and summary alignment and then press \\\"CONFIRM\\\".\");\r\n} else if (prev_state === \"SENTENCE END\"){\r\nSetInfoMessage(\"Finished sentence highlighting. When ready, press \\\"NEXT SENTENCE\\\".\");\r\n} else if (prev_state === \"SUMMARY END\") {\r\nSetInfoMessage(\"Finished summary highlighting. When ready, press \\\"SUBMIT\\\".\");\r\n} else{\r\nalert(`Coming back from Revision to an unsupported state... state is ${prev_state}`);\r\n}\r\n}\r\n\r\n// \"START\" state --> \"ANNOTATION\" state\r\nelse if (StateMachineState === \"START\"){\r\nconsole.log(`Old state: \\\"START\\\"; New state: \\\"ANNOTATION\\\" with SentInd=${CurrSentInd+1}.`);\r\nSetStateMachineState(\"ANNOTATION\");\r\nSetSummaryShadow(CurrSentInd+1);\r\nSetCurrSentInd(CurrSentInd+1);\r\nSetInfoMessage(\"Highlight document and summary alignment and then press \\\"CONFIRM\\\".\");\r\n\r\n// g_setStateMachineStateIndex(1.0)\r\n}\r\n\r\n// \"ANNOTATION\" state --> \"ANNOTATION\" with next alignment\r\nelse if (StateMachineState === \"ANNOTATION\"){\r\nconsole.log(`curr AlignmentCount is ${AlignmentCount}`);\r\nconsole.log(`Old state: \\\"ANNOTATION\\\"; New state: \\\"ANNOTATION\\\" with AlignmentCount=${AlignmentCount}.`);\r\napproveHighlightHandler();\r\nSetAlignmentCount(AlignmentCount+1);\r\nSetInfoMessage(\"Highlight document and summary alignment and then press \\\"CONFIRM\\\".\");\r\n}\r\n\r\n// \"SENTENCE END\" state --> \"SENTENCE START\" \r\nelse if (StateMachineState === \"SENTENCE END\"){\r\n// adding last sentence alignment\r\nconsole.log(`curr AlignmentCount is ${AlignmentCount}`);\r\napproveHighlightHandler();\r\nSetAlignmentCount(AlignmentCount+1);\r\n\r\n// moving to next sentence\r\n// update of summary sentence shadow is done in App.js in a designated useEffect\r\nconsole.log(`Old state: \\\"SENTENCE END\\\"; New state: \\\"SENTENCE START\\\" with SentInd=${CurrSentInd+1}.`);\r\nSetStateMachineState(\"SENTENCE START\");\r\nSetCurrSentInd(CurrSentInd+1);\r\nSetInfoMessage(\"Highlight document and summary alignment and then press \\\"CONFIRM\\\".\");\r\n}\r\n// \"SENTENCE START\" state --> \"ANNOTATION\" with next alignment \r\nelse if (StateMachineState === \"SENTENCE START\"){\r\nconsole.log(`curr AlignmentCount is ${AlignmentCount}`);\r\nconsole.log(`Old state: \\\"SENTENCE START\\\"; New state: \\\"ANNOTATION\\\" with AlignmentCount=${AlignmentCount}.`);\r\nSetStateMachineState(\"ANNOTATION\");\r\napproveHighlightHandler();\r\nSetAlignmentCount(AlignmentCount+1);\r\nSetInfoMessage(\"Highlight document and summary alignment and then press \\\"CONFIRM\\\".\");\r\n\r\n}\r\n// \"SUMMARY END\" state --> \"SUBMIT\" state \r\nelse if (StateMachineState === \"SUMMARY END\"){\r\nconsole.log(`Old state: \\\"SUMMARY END\\\"; New state: \\\"SUBMIT\\\"`);\r\nSetStateMachineState(\"SUBMIT\");\r\nSetInfoMessage(\"\");\r\n}\r\n\r\n// \"REVISE HOVER\" state --> \"REVISE CLICKED\" state \r\nelse if (StateMachineState === \"REVISE HOVER\"){\r\nconsole.log(`Old state: \\\"REVISE HOVER\\\"; New state: \\\"REVISE CLICKED\\\"`);\r\nReviseChooseAlignHandler(clickedWordInfo);\r\nSetStateMachineState(\"REVISE CLICKED\");\r\nSetInfoMessage(\"\");\r\n}\r\n\r\n// \"REVISE CLICKED\" state --> \"REVISE HOVER\" state \r\nelse if (StateMachineState === \"REVISE CLICKED\"){\r\nconsole.log(`curr AlignmentCount is ${AlignmentCount}`);\r\nconsole.log(`Old state: \\\"REVISE CLICKED\\\"; New state: \\\"REVISE HOVER\\\"`);\r\nSetStateMachineState(\"REVISE HOVER\");\r\napproveHighlightHandler();\r\nSetAlignmentCount(AlignmentCount+1);\r\nSetInfoMessage(\"Choose alignment to revise.\");\r\nsetPrevSummaryJsonRevise([]);\r\nsetPrevDocJsonRevise([]);\r\n}\r\n}\r\n\r\ng_MachineStateHandler.defaultProps = {\r\nforceState: '',\r\nisBackBtn: false\r\n}\r\n\r\n\r\n  export { MachineStateHandler, g_MachineStateHandler }\r\n","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\DocWord.js",["220"],[],"import Typography from '@mui/material/Typography';\r\n\r\nconst DocWord = ({ word_json, doc_paragraph_breaks, StateMachineState, DocMouseClickHandlerWrapper, hoverHandlerWrapper, DocOnMouseDownHandler, DocOnMouseUpHandler, setDocOnMouseDownActivated, docOnMouseDownActivated, setHoverActivatedId, ctrlButtonDown, setHoverActivatedDocOrSummary }) => {\r\n    // const XOR = (a,b) => {\r\n    //   return ( ( a && !b ) || ( !a && b ) )\r\n    // }\r\n\r\n    // const is_span_highlighted = () => {\r\n    //   if (ctrlButtonDown) {\r\n    //     return word_json.span_highlighted && !word_json.span_alignment_hover\r\n    //   } \r\n    //   else {\r\n    //     return word_json.span_highlighted\r\n    //   }\r\n    // }\r\n\r\n    const show_word = () => {\r\n      if (word_json.word !== \"\\n\"){\r\n        return word_json.word\r\n      } else {\r\n        return \"\"\r\n      }\r\n    }\r\n  \r\n    // the \"&nbsp;\" is to add space after word\r\n    return (\r\n      <div>\r\n        {/* {(word_json.word !== \"\\n\") && (\r\n          <div\r\n            className={`docWord noselect\r\n                        ${(word_json.span_highlighted && !word_json.span_alignment_hover) ?  'span-highlighted-word': ''} \r\n                        ${(word_json.span_alignment_hover && !ctrlButtonDown) ?  'span-aligned-hover-word': ''} \r\n                        ${(word_json.old_alignments && !word_json.span_highlighted) ? 'old-aligned-word': ''}\r\n                        ${word_json.boldfaced ? 'boldfaced-word': 'normal-sized-word'}\r\n                        ${(word_json.old_alignment_hover && StateMachineState===\"REVISE HOVER\") ? 'old-aligned-hover-word': ''}\r\n                        ${(StateMachineState !== \"REVISE HOVER\") ? 'cursor-span' : ''}\r\n                        ${(word_json.old_alignments && StateMachineState===\"REVISE HOVER\") ? 'cursor-pointer': ''}\r\n                        ${(word_json.red_color) ? 'red-color-word': 'text-muted'}\r\n                        `}\r\n            \r\n            style={{fontFamily: \"IBM Plex Sans\", lineHeight: \"0\"}}\r\n            onClick={() => DocMouseClickHandlerWrapper(word_json.tkn_id)}\r\n            onMouseEnter={() => {setHoverActivatedId(word_json.tkn_id); setHoverActivatedDocOrSummary(\"doc\"); hoverHandlerWrapper({inOrOut:\"in\", curr_alignment_id:word_json.alignment_id[0], isSummary:false})}}\r\n            onMouseLeave={() => hoverHandlerWrapper({inOrOut:\"out\", curr_alignment_id:word_json.alignment_id[0], tkn_id:word_json.tkn_id, isSummary:false})}\r\n            onMouseDown={() => DocOnMouseDownHandler(word_json.tkn_id)}\r\n            onMouseUp={() => DocOnMouseUpHandler()}\r\n          >\r\n              <nobr>\r\n                {word_json.word}\r\n              </nobr>&nbsp;\r\n          </div>\r\n        )}\r\n\r\n        {(word_json.word === \"\\n\") && (\r\n          <span className=\"br-class\"></span>\r\n        )} */}\r\n\r\n          <div\r\n            className={`docWord noselect\r\n                        ${(word_json.span_highlighted && !word_json.span_alignment_hover) ?  'span-highlighted-word': ''} \r\n                        ${(word_json.span_alignment_hover && !ctrlButtonDown) ?  'span-aligned-hover-word': ''} \r\n                        ${(word_json.old_alignments && !word_json.span_highlighted) ? 'old-aligned-word': ''}\r\n                        ${(word_json.red_color && !docOnMouseDownActivated) ? 'red-color-word': ''}\r\n                        ${(word_json.boldfaced && !word_json.red_color) ? 'boldfaced-word': ''}\r\n                        ${(!word_json.boldfaced && !word_json.red_color) ? 'text-muted': ''}\r\n                        ${(word_json.old_alignment_hover && StateMachineState===\"REVISE HOVER\") ? 'old-aligned-hover-word': ''}\r\n                        ${(StateMachineState !== \"REVISE HOVER\") ? 'cursor-span-doc' : ''}\r\n                        ${(word_json.old_alignments && StateMachineState===\"REVISE HOVER\") ? 'cursor-pointer': ''}\r\n                        `}\r\n            \r\n            style={{fontFamily: \"IBM Plex Sans\", lineHeight: \"1\"}}\r\n            onClick={() => DocMouseClickHandlerWrapper(word_json.tkn_id)}\r\n            onMouseEnter={() => {setHoverActivatedId(word_json.tkn_id); setHoverActivatedDocOrSummary(\"doc\"); hoverHandlerWrapper({inOrOut:\"in\", curr_alignment_id:word_json.alignment_id[0], isSummary:false})}}\r\n            onMouseLeave={() => {setHoverActivatedId(-1); hoverHandlerWrapper({inOrOut:\"out\", curr_alignment_id:word_json.alignment_id[0], tkn_id:word_json.tkn_id, isSummary:false})}}\r\n            onMouseDown={() => DocOnMouseDownHandler(word_json.tkn_id)}\r\n            onMouseUp={() => DocOnMouseUpHandler()}\r\n          >\r\n              <nobr>\r\n                {show_word()}\r\n              </nobr>&nbsp;\r\n          </div>\r\n\r\n          {(doc_paragraph_breaks.includes(word_json.tkn_id)) && (\r\n          <span className=\"br-class\"></span>\r\n        )}\r\n\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default DocWord","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\ResponsiveAppBar.js",["221","222","223","224","225","226","227","228"],[],"C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\BackButton.js",["229"],[],"import { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\nimport ResponsiveAppBar from './ResponsiveAppBar'\r\n\r\nconst BackButton = ({ back_path }) => {\r\n    return (\r\n        <Button component={Link} to={back_path} startIcon={<ArrowBackIosNewIcon />}>\r\n              back\r\n        </Button>\r\n\r\n    )\r\n  }\r\n  \r\n  export default BackButton","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\SummaryWord.js",[],[],"C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\styled-sliders.js",[],[],"C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\GuidedAnnotation_utils.js",["230","231","232","233"],[],"import Alert from 'react-bootstrap/Alert'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport ToastHeader from 'react-bootstrap/ToastHeader'\r\nimport ToastBody from 'react-bootstrap/ToastBody'\r\nimport ToastContainer from 'react-bootstrap/ToastContainer'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\n  \r\n  \r\nconst getGuidedAnnotationToastTitle = (g_StateMachineStateIndex) => {\r\nif(g_StateMachineStateIndex===0){return \"START\"}\r\nif(g_StateMachineStateIndex===1.0){return \"CHOOSE SUMMARY SPAN\"}\r\nif(g_StateMachineStateIndex===1.1){return \"BOLDING OPTIONS\"}\r\nif(g_StateMachineStateIndex===1.2){return \"CHOOSE DOCUMENT SPAN\"}\r\n\r\n}\r\n\r\nconst getGuidedAnnotationToastText = (g_StateMachineStateIndex) => {\r\nif(g_StateMachineStateIndex===0){return <p style={{margin:\"0\"}}>To begin, press the \"START\" button</p>}\r\nif(g_StateMachineStateIndex===1.0){return <p style={{margin:\"0\"}}>Choose a summary span from the first sentence to align (by left-clicking at the beginning of the span and leaving the click at its end).<hr></hr>Make sure the span you choose <u>describes at least one scene</u> and that it is <u>not too long</u>.</p>}\r\nif(g_StateMachineStateIndex===1.1){return <p style={{margin:\"0\"}}>Notice how document words related to the words in the highlighted span are in bold, to help you find the alignments.<hr></hr>When nothing is highlighted, all the doc words relating to all the current sentence's words are in bold.<hr></hr>At any given time, you can adust the level of bolding (none, highlighted span or full sentence), by playing with the red slider in the top-right corner of the UI. Try it before continuing.</p>}\r\nif(g_StateMachineStateIndex===1.2){return <p style={{margin:\"0\"}}>Great! Now that you got familiarized with the bolding feature, let's continue with that annotation.<hr></hr>Choose a span from the document aligning to the span you chose from the summary. Make sure you choose a span that covers all the information described in the summary span, and only it.</p>}\r\n}\r\n\r\nconst GuidedAnnotationToast = (toastVisible, setToastVisible, g_StateMachineStateIndex) => {\r\n    return (\r\n      <ToastContainer className=\"p-3\" position=\"middle-center\" style={{zIndex:\"1\"}}>\r\n        <Toast onClose={() => setToastVisible(false)} show={toastVisible} className=\"d-inline-block m-1\" bg='danger'>\r\n          <Toast.Header  style={{ color:\"black\", fontSize:\"x-large\"}}>\r\n            <strong className=\"me-auto\">{getGuidedAnnotationToastTitle(g_StateMachineStateIndex)}</strong>\r\n            <small>{g_StateMachineStateIndex}</small>\r\n          </Toast.Header>\r\n          <Toast.Body style={{color:\"white\", fontSize:\"large\", fontFamily:\"sans-serif\"}}>\r\n            {getGuidedAnnotationToastText(g_StateMachineStateIndex)}\r\n          </Toast.Body>\r\n        </Toast>\r\n      </ToastContainer>\r\n    )}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst summarySpanIsOk = (g_StateMachineStateIndex, tkn_ids) => {\r\n    if(g_StateMachineStateIndex===1.0){\r\n        if (tkn_ids.filter((tkn_id) => {return tkn_id>20}).length !== 0) {\r\n            return \"too long\"\r\n        } else if (Array.from(Array(20).keys()).filter((tkn_id) => {return !tkn_ids.includes(tkn_id)}).length !== 0){\r\n            return \"too short\"\r\n        } else {\r\n            return \"good\"\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst guidingAnnotationAlert = (guidingAnnotationAlertText, guidingAnnotationAlertTitle, guidingAnnotationAlertType, closeGuidingAnnotationAlert) => {\r\n    return (\r\n        <Modal \r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            id={`guidingAnnotationAlert-${guidingAnnotationAlertType}`}\r\n            centered\r\n            show={true} \r\n            onHide={closeGuidingAnnotationAlert}\r\n            >\r\n            <Modal.Header className={`alert-${guidingAnnotationAlertType} alert-heading h4`} style={{ marginBottom:\"0\"}} closeButton>\r\n                <Modal.Title style={{fontSize:\"xx-large\"}}>{guidingAnnotationAlertTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body  style={{fontSize:\"x-large\"}} className={`alert-${guidingAnnotationAlertType}`}>{guidingAnnotationAlertText}</Modal.Body>\r\n      </Modal>\r\n      ); \r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst g_StateMachineStateIndexHandler = (g_StateMachineStateIndex, g_setStateMachineStateIndex) => {\r\n    console.log(`g_StateMachineStateIndex is ${g_StateMachineStateIndex}`)\r\n    if(g_StateMachineStateIndex===0) {\r\n        g_setStateMachineStateIndex(1.0);\r\n    } else if (g_StateMachineStateIndex===1.0) {\r\n        g_setStateMachineStateIndex(1.1)\r\n    } else if (g_StateMachineStateIndex===1.1) {\r\n        g_setStateMachineStateIndex(1.2)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport { getGuidedAnnotationToastTitle, getGuidedAnnotationToastText, GuidedAnnotationToast, summarySpanIsOk, guidingAnnotationAlert, g_StateMachineStateIndexHandler }\r\n","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\Tutorial.js",["234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254"],[],"import { useState, useEffect, useRef } from 'react'\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport * as React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Annotation from './Annotation';\r\n\r\nimport { MachineStateHandler,  } from './Annotation_event_handlers';\r\nimport { t_StateMachineStateIdHandler, getTutorialCardTitle, getTutorialCardText } from './Tutorial_utils'\r\nimport _ from 'underscore';\r\n\r\n\r\nconst Tutorial = ({doc_json, setDocJson,\r\n                  t_start_doc_json, t_middle_doc_json, t_sent_end_doc_json, t_submit_doc_json, \r\n                  summary_json, setSummaryJson,\r\n                  t_start_summary_json, t_middle_summary_json, t_sent_end_summary_json, t_submit_summary_json,\r\n                  all_lemma_match_mtx, setAllLemmaMtx,\r\n                  important_lemma_match_mtx, setImportantLemmaMtx,\r\n                  doc_paragraph_breaks, setDocParagraphBreaks,\r\n                  t_state_messages}) => {\r\n\r\n                    \r\n  const [boldState, setBoldState] = useState(\"sent\"); // for user to choose if want full sentence, span or no lemma matching (denoted as \"sent\", \"span\" and \"none\", accordingly)\r\n  const [oldAlignmentState, setOldAlignmentState] = useState(\"all\"); // for user to choose if want full highlighting history, only current sentence's highlighting history or no history (denoted as \"all\", \"sent\" and \"none\", accordingly)\r\n  const [StateMachineState, SetStateMachineState] = useState(\"ANNOTATION\");\r\n  const [error_message, setErrorMessage] = React.useState(\"\");\r\n  const [CurrSentInd, SetCurrSentInd] = useState(1);\r\n  const [InfoMessage, SetInfoMessage] = useState(\"\");\r\n  const [AlignmentCount, SetAlignmentCount] = useState(3)\r\n\r\n  const [prevStateMachineState, setPrevStateMachineState] = useState(\"\")\r\n  \r\n  const [prevSummarySpanHighlights, setPrevSummarySpanHighlights] = useState([]) // relevant for restoring span alignments before going to \"revise\" mode\r\n  const [prevDocSpanHighlights, setPrevDocSpanHighlights] = useState([]) // relevant for restoring span alignments before going to \"revise\" mode\r\n  const [prevSummaryJsonRevise, setPrevSummaryJsonRevise] = useState([]) // relevant for restoring All alignments before choosing an alignment in revise mode so can be restored if pressing the back button\r\n  const [prevDocJsonRevise, setPrevDocJsonRevise] = useState([]) // relevant for restoring All alignments before choosing an alignment in revise mode so can be restored if pressing the back button\r\n\r\n\r\n  const [DocOnMouseDownID, SetDocOnMouseDownID] = useState(\"-1\");\r\n  const [SummaryOnMouseDownID, SetSummaryOnMouseDownID] = useState(\"-1\");\r\n  const [docOnMouseDownActivated, setDocOnMouseDownActivated] = useState(false);\r\n  const [summaryOnMouseDownActivated, setSummaryOnMouseDownActivated] = useState(false);\r\n  const [hoverActivatedId, setHoverActivatedId] = useState(\"-1\"); // value will be of tkn_id of elem hovered over\r\n  const [hoverActivatedDocOrSummary, setHoverActivatedDocOrSummary] = useState(\"doc\"); // value will be of tkn_id of elem hovered over\r\n  const [sliderBoldStateActivated, setSliderBoldStateActivated] = useState(false);\r\n\r\n  const [t_StateMachineStateId, t_SetStateMachineStateId] = useState(0);\r\n\r\n  /*************************************** error handling *************************************************/\r\n  const Alert = React.forwardRef(function Alert(props, ref) {return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;});\r\n  \r\n\r\n\r\n  const handleErrorOpen = ({ msg }) => { \r\n    setErrorMessage(msg); \r\n  };\r\n\r\n  const handleErrorClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setErrorMessage(\"\");\r\n  };\r\n\r\n\r\n/************************************************************************************************************* */\r\n\r\n  const isPunct = (tkn_txt) => {\r\n    const regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\r\n    const result = tkn_txt.replace(regex, '').replace(/(\\r\\n|\\n|\\r)/gm, \"\");\r\n    return (result === '');\r\n  }\r\n\r\n  const toggleDocSpanHighlight = ({tkn_ids, turn_on, turn_off}) => {\r\n    setSliderBoldStateActivated(false)\r\n    if (turn_on){\r\n      setDocJson(doc_json.map((word) => tkn_ids.includes(word.tkn_id) ? { ...word, span_highlighted: true } : word))\r\n    } else if (turn_off){\r\n        setDocJson(doc_json.map((word) => tkn_ids.includes(word.tkn_id) ? { ...word, span_highlighted: false } : word))\r\n    } else {\r\n        setDocJson(doc_json.map((word) => tkn_ids.includes(word.tkn_id) ? { ...word, span_highlighted: !word.span_highlighted } : word))\r\n    }\r\n  }\r\n\r\n  toggleDocSpanHighlight.defaultProps = {\r\n    turn_on: false,\r\n    turn_off: false\r\n  }\r\n\r\n  const toggleSummarySpanHighlight = ({tkn_ids, turn_on, turn_off}) => {\r\n    console.log(\"inside toggleSummarySpanHighlight:\")\r\n    console.log(tkn_ids)\r\n    setSliderBoldStateActivated(false)\r\n    if (turn_on){\r\n      setSummaryJson(summary_json.map((word) => tkn_ids.includes(word.tkn_id) ? { ...word, span_highlighted: true } : word));\r\n    } else if (turn_off){\r\n      setSummaryJson(summary_json.map((word) => tkn_ids.includes(word.tkn_id) ? { ...word, span_highlighted: false } : word));\r\n    } else {\r\n      setSummaryJson(summary_json.map((word) => tkn_ids.includes(word.tkn_id) ? { ...word, span_highlighted: !word.span_highlighted } : word));\r\n    }\r\n  }\r\n\r\n  toggleSummarySpanHighlight.defaultProps = {\r\n    turn_on: false,\r\n    turn_off: false\r\n  }\r\n\r\n\r\n  const approveHighlightHandler = () => {\r\n    const doc_tkn_ids = doc_json.filter((word) => {return word.span_highlighted}).map((word) => {return word.tkn_id});\r\n    setDocJson(doc_json.map((word) => doc_tkn_ids.includes(word.tkn_id) ? { ...word, all_highlighted: true, alignment_id: [...word.alignment_id, AlignmentCount], span_highlighted: false } : word));\r\n\r\n\r\n    const summary_tkn_ids = summary_json.filter((word) => {return word.span_highlighted}).map((word) => {return word.tkn_id});\r\n    setSummaryJson(summary_json.map((word) => summary_tkn_ids.includes(word.tkn_id) ? { ...word, all_highlighted: true, alignment_id: [...word.alignment_id, AlignmentCount], span_highlighted: false } : word));    \r\n \r\n  }\r\n\r\n  const StartReviseStateHandler = (isBackBtn) => {\r\n    if (isBackBtn){\r\n      setDocJson(doc_json.map((word, ind) => {return {...word, all_highlighted: prevDocJsonRevise[ind].all_highlighted, span_highlighted: prevDocJsonRevise[ind].span_highlighted, alignment_id: prevDocJsonRevise[ind].alignment_id}}))\r\n      setSummaryJson(summary_json.map((word, ind) => {return {...word, all_highlighted: prevSummaryJsonRevise[ind].all_highlighted, span_highlighted: prevSummaryJsonRevise[ind].span_highlighted, alignment_id: prevSummaryJsonRevise[ind].alignment_id}}))\r\n    } else{\r\n      setPrevStateMachineState(StateMachineState);\r\n      setPrevDocSpanHighlights(doc_json.filter((word) => {return word.span_highlighted}).map((word) => {return word.tkn_id}));\r\n      setPrevSummarySpanHighlights(summary_json.filter((word) => {return word.span_highlighted}).map((word) => {return word.tkn_id}));\r\n      \r\n      setDocJson(doc_json.map((word) => {return {...word, span_highlighted: false}}))\r\n      setSummaryJson(summary_json.map((word) => {return {...word, span_highlighted: false}}))\r\n    }\r\n  }\r\n\r\n  const ExitReviseHandler = () => {\r\n    setDocJson(doc_json.map((word, ind) => prevDocSpanHighlights.includes(word.tkn_id) ? {...word, span_highlighted: true}:{...word, span_highlighted: false}))\r\n    setSummaryJson(summary_json.map((word, ind) => prevSummarySpanHighlights.includes(word.tkn_id) ? {...word, span_highlighted: true}:{...word, span_highlighted: false}))               \r\n    const prev_state = prevStateMachineState;\r\n    SetStateMachineState(prevStateMachineState);\r\n    setPrevStateMachineState(\"\");\r\n    setPrevSummarySpanHighlights([]);\r\n    setPrevDocSpanHighlights([]);\r\n    return prev_state\r\n  }\r\n\r\n  const RemoveAlignmentId = (word, chosen_align_id) => {\r\n    const new_alignment_id = word.alignment_id.filter((elem) => {return elem !== chosen_align_id});\r\n    return new_alignment_id;\r\n  }\r\n\r\n  const ReviseChooseAlignHandler = (clickedWordInfo) => {\r\n    setPrevSummaryJsonRevise(summary_json);\r\n    setPrevDocJsonRevise(doc_json);\r\n\r\n    const chosen_align_id = (clickedWordInfo[0] === 'doc') ? doc_json.filter((word) => {return word.tkn_id === clickedWordInfo[1]})[0].alignment_id[0] : \r\n                                                             summary_json.filter((word) => {return word.tkn_id === clickedWordInfo[1]})[0].alignment_id[0]\r\n\r\n    setSummaryJson(summary_json.map((word) => word.alignment_id.includes(chosen_align_id) ? {...word, span_highlighted: true, all_highlighted: false, old_alignments: false, old_alignment_hover:false, alignment_id: RemoveAlignmentId(word, chosen_align_id)} : {...word, span_highlighted: false}))\r\n    setDocJson(doc_json.map((word) => word.alignment_id.includes(chosen_align_id) ? {...word, span_highlighted: true, all_highlighted: false, old_alignments: false, old_alignment_hover:false, alignment_id: RemoveAlignmentId(word, chosen_align_id)} : {...word, span_highlighted: false}))\r\n  }\r\n\r\n\r\n  const SetSummaryShadow = (sent_id) => {\r\n    setSummaryJson(summary_json.map((word) => word.sent_id === sent_id ? { ...word, shadowed: true } : { ...word, shadowed: false }))\r\n  }\r\n\r\n\r\n  const SetSummaryShadowAndUpdateHighlights = (sent_id) => {\r\n    setSummaryJson(\r\n      summary_json.map((word) => word.sent_id === sent_id ? { ...word, shadowed: true } : { ...word, shadowed: false }).map(\r\n      (word) => word.span_highlighted ? {...word, span_highlighted: false, all_highlighted:true} : word)\r\n      )\r\n  }\r\n\r\n  const SetDocBoldface = (tkn_ids) => {\r\n    setDocJson(doc_json.map((word) => tkn_ids.includes(word.tkn_id) ? { ...word, boldfaced: true } : { ...word, boldfaced: false }))\r\n  }\r\n\r\n  const checkIfLemmasMatch = ({doc_id, summary_ids, isHover}) => {\r\n    // if (isHover){\r\n    //   console.log(\"AVIVSL: summary_ids are:\")\r\n    //   console.log(summary_ids)\r\n    // }\r\n    const which_match_mtx = important_lemma_match_mtx;\r\n    const matching_summary_ids = summary_ids.filter((summary_id) => {return all_lemma_match_mtx[doc_id][summary_id] === 1;})\r\n    return matching_summary_ids.length > 0\r\n  }\r\n\r\n  const boldStateHandler = (event, newValue) => {\r\n    if (event !== undefined){\r\n      setSliderBoldStateActivated(true)\r\n    }\r\n    if (newValue=='1'){\r\n      setBoldState(\"none\");\r\n      SetDocBoldface([]);\r\n    } else if (newValue=='2'){\r\n      setBoldState(\"span\");\r\n      const summary_ids = summary_json.filter((word) => {return word.span_highlighted}).map((word) => {return word.tkn_id});\r\n      const isSpan = true;\r\n      const tkn_ids = doc_json.map((word) => {return word.tkn_id}).filter((doc_id) => {return checkIfLemmasMatch({doc_id:doc_id, summary_ids:summary_ids, isHover:false})});\r\n      SetDocBoldface(tkn_ids);\r\n    } else {\r\n      setBoldState(\"sent\");\r\n      const isSpan = false;\r\n      const summary_ids = summary_json.filter((word) => {return word.shadowed}).map((word) => {return word.tkn_id});\r\n      const tkn_ids = doc_json.map((word) => {return word.tkn_id}).filter((doc_id) => {return checkIfLemmasMatch({doc_id:doc_id, summary_ids:summary_ids, isHover:false})});\r\n      SetDocBoldface(tkn_ids);\r\n    }\r\n  }\r\n\r\n\r\n  const SetDocOldHighlights = (tkn_ids) => {\r\n    setDocJson(doc_json.map((word) => tkn_ids.includes(word.tkn_id) ? { ...word, old_alignments: true } : { ...word, old_alignments: false }))\r\n  }\r\n\r\n  const SetSummaryOldHighlights = (tkn_ids) => {\r\n    setSummaryJson(summary_json.map((word) => tkn_ids.includes(word.tkn_id) ? { ...word, old_alignments: true } : { ...word, old_alignments: false }))\r\n  }\r\n\r\n  const FindDocAlignmentPerSent = (sent_ind) => {\r\n    let curr_sent_alignment_ids = summary_json.map((word) => {return (word.sent_id===sent_ind) ? word.alignment_id : []});\r\n    curr_sent_alignment_ids = [].concat.apply([], curr_sent_alignment_ids); // merge into a single array (before was an array of arrays)\r\n    const doc_ids = doc_json.filter((word) => {return word.alignment_id.some(r=> curr_sent_alignment_ids.includes(r))}).map((word) => {return word.tkn_id});\r\n    return doc_ids\r\n  }\r\n\r\n\r\n  const oldAlignmentStateHandler = ({event, newValue, sent_ind}) => {\r\n\r\n    if (newValue=='1'){\r\n      setOldAlignmentState(\"none\");\r\n      SetDocOldHighlights([]);\r\n      SetSummaryOldHighlights([]);\r\n    } else if (newValue=='2'){\r\n      setOldAlignmentState(\"sent\");\r\n      sent_ind = (sent_ind===-1) ? CurrSentInd : sent_ind\r\n      const doc_ids = FindDocAlignmentPerSent(sent_ind)\r\n      const summary_ids = summary_json.filter((word) => {return (word.all_highlighted && word.sent_id === sent_ind)}).map((word) => {return word.tkn_id});\r\n      SetDocOldHighlights(doc_ids);\r\n      SetSummaryOldHighlights(summary_ids);\r\n    } else {\r\n      setOldAlignmentState(\"all\");\r\n      const doc_ids = doc_json.filter((word) => {return word.all_highlighted}).map((word) => {return word.tkn_id});\r\n      const summary_ids = summary_json.filter((word) => {return word.all_highlighted}).map((word) => {return word.tkn_id});\r\n      SetDocOldHighlights(doc_ids);\r\n      SetSummaryOldHighlights(summary_ids);\r\n    }\r\n  }\r\n\r\n  oldAlignmentStateHandler.defaultProps = {\r\n    sent_ind: -1\r\n  }\r\n\r\n\r\n  \r\n  const hoverHandler = ({inOrOut, curr_alignment_id, tkn_id, isSummary}) => {\r\n    // onMouseEnter for \"REVISE HOVER\"\r\n    if (inOrOut === \"in\" && StateMachineState===\"REVISE HOVER\") { \r\n      setDocJson(doc_json.map((word) => word.alignment_id.includes(curr_alignment_id) ? {...word, old_alignment_hover: true} : {...word, old_alignment_hover: false}))\r\n      setSummaryJson(summary_json.map((word) => word.alignment_id.includes(curr_alignment_id) ? {...word, old_alignment_hover: true} : {...word, old_alignment_hover: false}))\r\n    } \r\n    // onMouseLeave for \"REVISE HOVER\"\r\n    else if (inOrOut === \"out\" && StateMachineState===\"REVISE HOVER\") { \r\n      setDocJson(doc_json.map((word) => {return {...word, old_alignment_hover:false}}))\r\n      setSummaryJson(summary_json.map((word) => {return {...word, old_alignment_hover:false}}))\r\n    }\r\n    // onMouseEnter for all the alignments choosing states\r\n    // else if (inOrOut === \"in\" && [\"ANNOTATION\", \"SENTENCE END\", \"SUMMARY END\", \"REVISE CLICKED\", \"SENTENCE START\"].includes(StateMachineState) && isSummary) { \r\n      // const doc_tkn_ids = doc_json.map((word) => {return word.tkn_id}).filter((doc_id) => {return checkIfLemmasMatch({doc_id:doc_id, summary_ids:[tkn_id], isHover:true})});\r\n      // setDocJson(doc_json.map((word) => doc_tkn_ids.includes(word.tkn_id) ? {...word, red_color:true} : {...word, red_color:false}))\r\n    // } \r\n    // onMouseLeave for all the alignments choosing states\r\n    else if (inOrOut === \"out\" && [\"ANNOTATION\", \"SENTENCE END\", \"SUMMARY END\", \"REVISE CLICKED\", \"SENTENCE START\"].includes(StateMachineState) && isSummary) { \r\n      setDocJson(doc_json.map((word) => {return {...word, red_color:false}}))\r\n    }\r\n\r\n  }\r\n\r\n  const isRedLettered = (summary_tkn_id) => {\r\n    if ((StateMachineState === \"REVISE CLICKED\") && (summary_json.filter((word) => {return word.tkn_id === summary_tkn_id && word.sent_id > CurrSentInd}).length !== 0)){\r\n      return false\r\n    } else if ((summary_json.filter((word) => {return word.tkn_id === summary_tkn_id && word.sent_id !== CurrSentInd}).length !== 0) && !([\"REVISE HOVER\", \"REVISE CLICKED\"].includes(StateMachineState))) {\r\n      return false\r\n    } else if ([\"ANNOTATION\", \"SENTENCE END\", \"SUMMARY END\", \"REVISE CLICKED\", \"SENTENCE START\"].includes(StateMachineState)) {\r\n      return true\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  const MachineStateHandlerWrapper = ({clickedWordInfo, forceState, isBackBtn}) => {\r\n    setSliderBoldStateActivated(false);\r\n    if (typeof forceState === 'string') {\r\n      console.log(`forceState situation with: state ${forceState}`);\r\n    }\r\n    else{\r\n      console.log(\"not a forceState situation...\");\r\n    }\r\n    MachineStateHandler(summary_json,\r\n                          StateMachineState, SetStateMachineState,\r\n                          SetInfoMessage, handleErrorOpen, isPunct,\r\n                          CurrSentInd, SetCurrSentInd, SetSummaryShadow,\r\n                          AlignmentCount, SetAlignmentCount,\r\n                          approveHighlightHandler,\r\n                          clickedWordInfo, forceState, \r\n                          StartReviseStateHandler, ExitReviseHandler,\r\n                          ReviseChooseAlignHandler, \r\n                          isBackBtn,\r\n                          setPrevSummaryJsonRevise, setPrevDocJsonRevise\r\n                         );\r\n  }\r\n\r\n  MachineStateHandlerWrapper.defaultProps = {\r\n    forceState: '',\r\n    clickedWordInfo: [],\r\n    isBackBtn: false\r\n  }\r\n\r\n\r\n/**************************************************************************************************************/\r\n\r\n  /*******  useState for smooth transition to \"SENTENCE END\" or \"SUMMARY END\" *******/\r\n  const finishedSent = useRef(false);\r\n\r\n  useEffect(() => {\r\n    const isNotStart = (StateMachineState !== \"START\" && summary_json.filter((word) => {return word.sent_id===CurrSentInd && word.shadowed}).length !== 0);\r\n    const isAllSentHighlighted = (summary_json.filter((word) => { return word.sent_id===CurrSentInd && !(word.all_highlighted || word.span_highlighted) && !isPunct(word.word)}).length === 0); // need \"isNotStart\" because also for \"START\" state isAllSentHighlighted=true because no sentence is span-highlighted yet \r\n    if (isAllSentHighlighted && isNotStart && !finishedSent.current && ![\"REVISE HOVER\", \"REVISE CLICKED\"].includes(StateMachineState)) {\r\n      finishedSent.current = true;\r\n\r\n\r\n      const isLastSent = (Math.max.apply(Math, summary_json.map(word => { return word.sent_id; })) === CurrSentInd)\r\n      if (isLastSent) {\r\n        MachineStateHandlerWrapper({forceState:\"SUMMARY END\"});   \r\n      } else {\r\n        MachineStateHandlerWrapper({forceState:\"SENTENCE END\"});   \r\n      }\r\n    }\r\n\r\n    // if regretted summary highlighting\r\n    else if(!isAllSentHighlighted && isNotStart && finishedSent.current && ![\"REVISE HOVER\", \"REVISE CLICKED\"].includes(StateMachineState)) { \r\n      console.log(`curr state is ${StateMachineState}`);\r\n      console.log(`curr CurrSentInd is ${CurrSentInd}`)\r\n      console.log(\"back to square one\");\r\n      finishedSent.current = false;\r\n      MachineStateHandlerWrapper({forceState:\"ANNOTATION\"});\r\n    }\r\n  }, [summary_json]);\r\n  /*********************************************************************************/ \r\n\r\n\r\n  \r\n  /*********** useState to update the summary shadow when next sentence ***********/ \r\n  useEffect(() => {\r\n    SetSummaryShadowAndUpdateHighlights(CurrSentInd);\r\n  }, [CurrSentInd]);\r\n  /********************************************************************************/\r\n\r\n\r\n  /***************************** bolding controlling *****************************/ \r\n  useEffect(() => {\r\n    // when choosing a span - if nothing is span_highlighted then all sent matches are in bold, otherwise only span_highlighted matches (when highlighting - something must be span-highlighted so automatically is '2')\r\n    if ([\"ANNOTATION\", \"SENTENCE END\", \"SUMMARY END\"].includes(StateMachineState) && !sliderBoldStateActivated) {\r\n      const bold_state = (summary_json.filter((word) => {return word.span_highlighted}).length === 0) ? '3' : '2'; // if no span is current highlighted - bold everything, otherwise bold only currently highlighted span\r\n      boldStateHandler(undefined, bold_state);\r\n    } else if ([\"REVISE HOVER\", \"REVISE CLICKED\"].includes(StateMachineState) && !sliderBoldStateActivated) {\r\n      boldStateHandler(undefined, '1');\r\n    }\r\n  }, [StateMachineState, summary_json]);\r\n  /********************************************************************************/\r\n\r\n\r\n    /***************************** old alignments controlling *****************************/ \r\n    const prevState = useRef(\"\")\r\n    useEffect(() => {\r\n      if ([\"ANNOTATION\", \"SENTENCE END\", \"SUMMARY END\"].includes(StateMachineState)) {\r\n        oldAlignmentStateHandler({event:undefined, newValue:'3', sent_ind:-1});\r\n      } else if (StateMachineState === \"REVISE CLICKED\"){\r\n        oldAlignmentStateHandler({event:undefined, newValue:'1', sent_ind:-1});\r\n      } else if (StateMachineState === \"REVISE HOVER\"){\r\n        oldAlignmentStateHandler({event:undefined, newValue:'3', sent_ind:-1});\r\n      }\r\n      prevState.current = StateMachineState;\r\n    }, [StateMachineState, AlignmentCount]);\r\n    /********************************************************************************/\r\n    useEffect(() => {\r\n      console.log(`t_doc_json is:`)\r\n      console.log(doc_json)\r\n    }, []);\r\n    \r\n    \r\n    \r\n    /******************* highlighting while choosing spans to help *******************/ \r\n\r\n\r\n    useEffect(() => {\r\n      if (DocOnMouseDownID !== \"-1\"){\r\n        setDocOnMouseDownActivated(true)\r\n      } else if (DocOnMouseDownID === \"-1\"){\r\n        setDocOnMouseDownActivated(false)\r\n      } \r\n      \r\n      if (SummaryOnMouseDownID !== \"-1\") {\r\n        setSummaryOnMouseDownActivated(true)\r\n      } else {\r\n        setSummaryOnMouseDownActivated(false)\r\n      }\r\n    }, [DocOnMouseDownID,SummaryOnMouseDownID]);\r\n    \r\n    //AVIVSL: TODO: find way to reset the whole hovering process when the onMouseUp occurs outside of the text (maybe when docOnMouseDownActivated===false or summaryOnMouseDownActivated===false) --> maybe use a useRef to remember which one was the one activated - summary or doc?\r\n    useEffect(() => {\r\n      if ([\"ANNOTATION\", \"SENTENCE END\", \"SUMMARY END\", \"REVISE CLICKED\", \"SENTENCE START\"].includes(StateMachineState)){\r\n        if(docOnMouseDownActivated) {\r\n          console.log(`DocOnMouseDownID is ${DocOnMouseDownID} and hoverActivatedId ia ${hoverActivatedId}`)\r\n          const min_ID =  (DocOnMouseDownID > hoverActivatedId) ? hoverActivatedId : DocOnMouseDownID;\r\n          const max_ID =  (DocOnMouseDownID > hoverActivatedId) ? DocOnMouseDownID : hoverActivatedId;\r\n          let chosen_IDs = [];\r\n          for(let i=min_ID; i<=max_ID; i++){\r\n            chosen_IDs.push(i);\r\n          }\r\n          setDocJson(doc_json.map((word) => chosen_IDs.includes(word.tkn_id)? {...word, span_alignment_hover:true}:{...word, span_alignment_hover:false}))\r\n        } else if (!docOnMouseDownActivated){\r\n          setDocJson(doc_json.map((word) => {return {...word, span_alignment_hover:false}}))\r\n        }\r\n        if(summaryOnMouseDownActivated) {\r\n          console.log(`SummaryOnMouseDownID is ${SummaryOnMouseDownID} and hoverActivatedId ia ${hoverActivatedId}`)\r\n          const min_ID =  (SummaryOnMouseDownID > hoverActivatedId) ? hoverActivatedId : SummaryOnMouseDownID;\r\n          const max_ID =  (SummaryOnMouseDownID > hoverActivatedId) ? SummaryOnMouseDownID : hoverActivatedId;\r\n          let chosen_IDs = [];\r\n          for(let i=min_ID; i<=max_ID; i++){\r\n            chosen_IDs.push(i);\r\n          }\r\n          setSummaryJson(summary_json.map((word) => chosen_IDs.includes(word.tkn_id)? {...word, span_alignment_hover:true}:{...word, span_alignment_hover:false}))\r\n        } else if (!summaryOnMouseDownActivated){\r\n          setSummaryJson(summary_json.map((word) => {return {...word, span_alignment_hover:false}}))\r\n          \r\n          if (isRedLettered(hoverActivatedId) && hoverActivatedDocOrSummary === \"summary\") {\r\n            const doc_tkn_ids = doc_json.map((word) => {return word.tkn_id}).filter((doc_id) => {return checkIfLemmasMatch({doc_id:doc_id, summary_ids:[hoverActivatedId], isHover:true})});\r\n            \r\n            console.log(\"red is activated:\")\r\n            console.log(doc_json.filter((word) => {return doc_tkn_ids.includes(word.tkn_id)}).map((word) => {return word.word}))\r\n\r\n            setDocJson(doc_json.map((word) => doc_tkn_ids.includes(word.tkn_id) ? {...word, red_color:true} : {...word, red_color:false}))  \r\n          }  \r\n        }\r\n      }\r\n    }, [docOnMouseDownActivated, summaryOnMouseDownActivated, hoverActivatedId]);\r\n    /********************************************************************************/ \r\n/**************************************************************************************************************/\r\n\r\n\r\n\r\n    const SubmitHandler = (event) => {\r\n      console.log(event);\r\n      alert(\"Submitted!\");\r\n    }\r\n\r\n\r\n  return ( \r\n      <>\r\n         {(t_StateMachineStateId !== 0) && (\r\n            <Annotation \r\n                    isTutorial = {true}\r\n                    isGuidedAnnotation={false} \r\n                    task_id={'0'} \r\n                    doc_json = {doc_json}\r\n                    summary_json = {summary_json}\r\n                    all_lemma_match_mtx = {all_lemma_match_mtx}\r\n                    important_lemma_match_mtx = {important_lemma_match_mtx}\r\n                    doc_paragraph_breaks = {doc_paragraph_breaks}\r\n                    StateMachineState = {StateMachineState}\r\n                    SetStateMachineState = {SetStateMachineState}\r\n                    handleErrorOpen = {handleErrorOpen}\r\n                    isPunct = {isPunct}\r\n                    toggleSummarySpanHighlight = {toggleSummarySpanHighlight}\r\n                    toggleDocSpanHighlight = {toggleDocSpanHighlight}\r\n                    boldState = {boldState}\r\n                    boldStateHandler = {boldStateHandler}\r\n                    SubmitHandler = {SubmitHandler}\r\n                    CurrSentInd = {CurrSentInd}\r\n                    InfoMessage = {InfoMessage}\r\n                    MachineStateHandlerWrapper = {MachineStateHandlerWrapper}\r\n                    AlignmentCount = {AlignmentCount} \r\n                    SetAlignmentCount = {SetAlignmentCount}\r\n                    oldAlignmentState = {oldAlignmentState}\r\n                    oldAlignmentStateHandler = {oldAlignmentStateHandler}\r\n                    hoverHandler = {hoverHandler}\r\n                    DocOnMouseDownID = {DocOnMouseDownID}\r\n                    SetDocOnMouseDownID = {SetDocOnMouseDownID}\r\n                    SummaryOnMouseDownID = {SummaryOnMouseDownID}\r\n                    SetSummaryOnMouseDownID = {SetSummaryOnMouseDownID}\r\n                    setDocOnMouseDownActivated = {setDocOnMouseDownActivated}\r\n                    docOnMouseDownActivated = {docOnMouseDownActivated}\r\n                    setSummaryOnMouseDownActivated = {setSummaryOnMouseDownActivated}\r\n                    summaryOnMouseDownActivated = {summaryOnMouseDownActivated}\r\n                    setHoverActivatedId = {setHoverActivatedId}\r\n                    setHoverActivatedDocOrSummary = {setHoverActivatedDocOrSummary}\r\n                    g_StateMachineStateIndex = {undefined}\r\n                    guidingAnnotationAlertText = {undefined}\r\n                    guidingAnnotationAlertTitle = {undefined} \r\n                    guidingAnnotationAlertType = {undefined}\r\n                    closeGuidingAnnotationAlert = {undefined}\r\n                    />\r\n        )}\r\n        <Card className={`${(t_StateMachineStateId === 0) ? 'tutorial-card-intro' : 'tutorial-card-not-intro'}`} bg=\"info\" border=\"primary\" style={{ width: '60rem' }}>\r\n          <Card.Body>\r\n            <Card.Title className='tutorial-title'>{getTutorialCardTitle(t_state_messages,t_StateMachineStateId)}</Card.Title>\r\n            <Card.Text>\r\n              {getTutorialCardText(t_state_messages,t_StateMachineStateId)}\r\n            </Card.Text>\r\n            {(t_StateMachineStateId !== 0) && (\r\n              <Button className=\"btn btn-dark btn-lg\" onClick={() => {t_StateMachineStateIdHandler({IsNext:false, SetStateMachineState:SetStateMachineState, t_SetStateMachineStateId:t_SetStateMachineStateId, t_StateMachineStateId:t_StateMachineStateId, \r\n                                                                                                    setDocJson:setDocJson, t_start_doc_json:t_start_doc_json, t_middle_doc_json:t_middle_doc_json, t_sent_end_doc_json:t_sent_end_doc_json, t_submit_doc_json:t_submit_doc_json,\r\n                                                                                                    setSummaryJson:setSummaryJson, t_start_summary_json:t_start_summary_json, t_middle_summary_json:t_middle_summary_json, t_sent_end_summary_json:t_sent_end_summary_json, t_submit_summary_json:t_submit_summary_json,\r\n                                                                                                    SetCurrSentInd:SetCurrSentInd})}}\r\n              >\r\n                Back\r\n            </Button>\r\n            )}\r\n              <Button className=\"btn btn-primary btn-lg right-button\" onClick={() => {t_StateMachineStateIdHandler({IsNext:true, SetStateMachineState:SetStateMachineState, t_SetStateMachineStateId:t_SetStateMachineStateId, t_StateMachineStateId:t_StateMachineStateId, \r\n                                                                                                    setDocJson:setDocJson, t_start_doc_json:t_start_doc_json, t_middle_doc_json:t_middle_doc_json, t_sent_end_doc_json:t_sent_end_doc_json, t_submit_doc_json:t_submit_doc_json,\r\n                                                                                                    setSummaryJson:setSummaryJson, t_start_summary_json:t_start_summary_json, t_middle_summary_json:t_middle_summary_json, t_sent_end_summary_json:t_sent_end_summary_json, t_submit_summary_json:t_submit_summary_json,\r\n                                                                                                    SetCurrSentInd:SetCurrSentInd})}}\r\n              >\r\n                Next\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tutorial\r\n","C:\\Users\\aviv\\OneDrive\\Desktop\\highlights-extract-app\\src\\components\\Tutorial_utils.js",[],[],{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","severity":1,"message":"260","line":7,"column":8,"nodeType":"261","messageId":"262","endLine":7,"endColumn":17},{"ruleId":"259","severity":1,"message":"263","line":10,"column":8,"nodeType":"261","messageId":"262","endLine":10,"endColumn":24},{"ruleId":"259","severity":1,"message":"264","line":30,"column":8,"nodeType":"261","messageId":"262","endLine":30,"endColumn":9},{"ruleId":"265","severity":1,"message":"266","line":223,"column":62,"nodeType":"267","messageId":"268","endLine":223,"endColumn":64},{"ruleId":"265","severity":1,"message":"266","line":225,"column":69,"nodeType":"267","messageId":"268","endLine":225,"endColumn":71},{"ruleId":"259","severity":1,"message":"269","line":318,"column":11,"nodeType":"261","messageId":"262","endLine":318,"endColumn":26},{"ruleId":"265","severity":1,"message":"266","line":330,"column":17,"nodeType":"267","messageId":"268","endLine":330,"endColumn":19},{"ruleId":"265","severity":1,"message":"266","line":333,"column":24,"nodeType":"267","messageId":"268","endLine":333,"endColumn":26},{"ruleId":"259","severity":1,"message":"270","line":336,"column":13,"nodeType":"261","messageId":"262","endLine":336,"endColumn":19},{"ruleId":"259","severity":1,"message":"270","line":341,"column":13,"nodeType":"261","messageId":"262","endLine":341,"endColumn":19},{"ruleId":"265","severity":1,"message":"266","line":367,"column":17,"nodeType":"267","messageId":"268","endLine":367,"endColumn":19},{"ruleId":"265","severity":1,"message":"266","line":371,"column":24,"nodeType":"267","messageId":"268","endLine":371,"endColumn":26},{"ruleId":"259","severity":1,"message":"269","line":599,"column":11,"nodeType":"261","messageId":"262","endLine":599,"endColumn":26},{"ruleId":"265","severity":1,"message":"266","line":608,"column":17,"nodeType":"267","messageId":"268","endLine":608,"endColumn":19},{"ruleId":"265","severity":1,"message":"266","line":611,"column":24,"nodeType":"267","messageId":"268","endLine":611,"endColumn":26},{"ruleId":"259","severity":1,"message":"270","line":614,"column":13,"nodeType":"261","messageId":"262","endLine":614,"endColumn":19},{"ruleId":"259","severity":1,"message":"270","line":619,"column":13,"nodeType":"261","messageId":"262","endLine":619,"endColumn":19},{"ruleId":"265","severity":1,"message":"266","line":645,"column":17,"nodeType":"267","messageId":"268","endLine":645,"endColumn":19},{"ruleId":"265","severity":1,"message":"266","line":649,"column":24,"nodeType":"267","messageId":"268","endLine":649,"endColumn":26},{"ruleId":"271","severity":1,"message":"272","line":764,"column":6,"nodeType":"273","endLine":764,"endColumn":22,"suggestions":"274"},{"ruleId":"271","severity":1,"message":"275","line":770,"column":6,"nodeType":"273","endLine":770,"endColumn":21,"suggestions":"276"},{"ruleId":"271","severity":1,"message":"277","line":782,"column":6,"nodeType":"273","endLine":782,"endColumn":43,"suggestions":"278"},{"ruleId":"271","severity":1,"message":"279","line":796,"column":7,"nodeType":"273","endLine":796,"endColumn":46,"suggestions":"280"},{"ruleId":"271","severity":1,"message":"281","line":855,"column":7,"nodeType":"273","endLine":855,"endColumn":85,"suggestions":"282"},{"ruleId":"271","severity":1,"message":"283","line":906,"column":6,"nodeType":"273","endLine":906,"endColumn":20,"suggestions":"284"},{"ruleId":"271","severity":1,"message":"285","line":914,"column":6,"nodeType":"273","endLine":914,"endColumn":19,"suggestions":"286"},{"ruleId":"271","severity":1,"message":"287","line":927,"column":6,"nodeType":"273","endLine":927,"endColumn":39,"suggestions":"288"},{"ruleId":"271","severity":1,"message":"289","line":942,"column":8,"nodeType":"273","endLine":942,"endColumn":43,"suggestions":"290"},{"ruleId":"271","severity":1,"message":"291","line":950,"column":8,"nodeType":"273","endLine":950,"endColumn":21,"suggestions":"292"},{"ruleId":"271","severity":1,"message":"293","line":1008,"column":8,"nodeType":"273","endLine":1008,"endColumn":80,"suggestions":"294"},{"ruleId":"259","severity":1,"message":"295","line":5,"column":10,"nodeType":"261","messageId":"262","endLine":5,"endColumn":39},{"ruleId":"259","severity":1,"message":"296","line":5,"column":41,"nodeType":"261","messageId":"262","endLine":5,"endColumn":69},{"ruleId":"259","severity":1,"message":"297","line":6,"column":8,"nodeType":"261","messageId":"262","endLine":6,"endColumn":16},{"ruleId":"259","severity":1,"message":"298","line":8,"column":10,"nodeType":"261","messageId":"262","endLine":8,"endColumn":29},{"ruleId":"259","severity":1,"message":"299","line":8,"column":31,"nodeType":"261","messageId":"262","endLine":8,"endColumn":53},{"ruleId":"259","severity":1,"message":"300","line":9,"column":8,"nodeType":"261","messageId":"262","endLine":9,"endColumn":16},{"ruleId":"259","severity":1,"message":"301","line":10,"column":8,"nodeType":"261","messageId":"262","endLine":10,"endColumn":18},{"ruleId":"259","severity":1,"message":"302","line":12,"column":8,"nodeType":"261","messageId":"262","endLine":12,"endColumn":11},{"ruleId":"259","severity":1,"message":"303","line":16,"column":8,"nodeType":"261","messageId":"262","endLine":16,"endColumn":18},{"ruleId":"259","severity":1,"message":"304","line":17,"column":8,"nodeType":"261","messageId":"262","endLine":17,"endColumn":19},{"ruleId":"259","severity":1,"message":"305","line":18,"column":8,"nodeType":"261","messageId":"262","endLine":18,"endColumn":19},{"ruleId":"259","severity":1,"message":"306","line":19,"column":8,"nodeType":"261","messageId":"262","endLine":19,"endColumn":14},{"ruleId":"259","severity":1,"message":"307","line":20,"column":8,"nodeType":"261","messageId":"262","endLine":20,"endColumn":11},{"ruleId":"259","severity":1,"message":"308","line":21,"column":10,"nodeType":"261","messageId":"262","endLine":21,"endColumn":21},{"ruleId":"259","severity":1,"message":"309","line":57,"column":10,"nodeType":"261","messageId":"262","endLine":57,"endColumn":30},{"ruleId":"259","severity":1,"message":"310","line":58,"column":10,"nodeType":"261","messageId":"262","endLine":58,"endColumn":25},{"ruleId":"259","severity":1,"message":"311","line":59,"column":10,"nodeType":"261","messageId":"262","endLine":59,"endColumn":34},{"ruleId":"259","severity":1,"message":"312","line":60,"column":10,"nodeType":"261","messageId":"262","endLine":60,"endColumn":29},{"ruleId":"265","severity":1,"message":"266","line":141,"column":27,"nodeType":"267","messageId":"268","endLine":141,"endColumn":29},{"ruleId":"271","severity":1,"message":"313","line":256,"column":62,"nodeType":"261","endLine":256,"endColumn":69},{"ruleId":"271","severity":1,"message":"314","line":258,"column":4,"nodeType":"273","endLine":258,"endColumn":27,"suggestions":"315"},{"ruleId":"271","severity":1,"message":"316","line":267,"column":4,"nodeType":"273","endLine":267,"endColumn":6,"suggestions":"317"},{"ruleId":"259","severity":1,"message":"307","line":7,"column":8,"nodeType":"261","messageId":"262","endLine":7,"endColumn":11},{"ruleId":"259","severity":1,"message":"318","line":9,"column":8,"nodeType":"261","messageId":"262","endLine":9,"endColumn":19},{"ruleId":"259","severity":1,"message":"319","line":10,"column":10,"nodeType":"261","messageId":"262","endLine":10,"endColumn":17},{"ruleId":"259","severity":1,"message":"320","line":14,"column":7,"nodeType":"261","messageId":"262","endLine":14,"endColumn":12},{"ruleId":"259","severity":1,"message":"321","line":1,"column":8,"nodeType":"261","messageId":"262","endLine":1,"endColumn":18},{"ruleId":"322","severity":1,"message":"323","line":17,"column":32,"nodeType":"324","messageId":"325","endLine":17,"endColumn":33,"suggestions":"326"},{"ruleId":"322","severity":1,"message":"323","line":17,"column":46,"nodeType":"324","messageId":"325","endLine":17,"endColumn":47,"suggestions":"327"},{"ruleId":"322","severity":1,"message":"323","line":24,"column":32,"nodeType":"324","messageId":"325","endLine":24,"endColumn":33,"suggestions":"328"},{"ruleId":"322","severity":1,"message":"323","line":24,"column":45,"nodeType":"324","messageId":"325","endLine":24,"endColumn":46,"suggestions":"329"},{"ruleId":"322","severity":1,"message":"323","line":31,"column":32,"nodeType":"324","messageId":"325","endLine":31,"endColumn":33,"suggestions":"330"},{"ruleId":"322","severity":1,"message":"323","line":31,"column":44,"nodeType":"324","messageId":"325","endLine":31,"endColumn":45,"suggestions":"331"},{"ruleId":"322","severity":1,"message":"323","line":39,"column":32,"nodeType":"324","messageId":"325","endLine":39,"endColumn":33,"suggestions":"332"},{"ruleId":"322","severity":1,"message":"323","line":39,"column":46,"nodeType":"324","messageId":"325","endLine":39,"endColumn":47,"suggestions":"333"},{"ruleId":"322","severity":1,"message":"323","line":60,"column":33,"nodeType":"324","messageId":"325","endLine":60,"endColumn":34,"suggestions":"334"},{"ruleId":"322","severity":1,"message":"323","line":60,"column":40,"nodeType":"324","messageId":"325","endLine":60,"endColumn":41,"suggestions":"335"},{"ruleId":"322","severity":1,"message":"323","line":60,"column":55,"nodeType":"324","messageId":"325","endLine":60,"endColumn":56,"suggestions":"336"},{"ruleId":"322","severity":1,"message":"323","line":60,"column":67,"nodeType":"324","messageId":"325","endLine":60,"endColumn":68,"suggestions":"337"},{"ruleId":"322","severity":1,"message":"323","line":70,"column":31,"nodeType":"324","messageId":"325","endLine":70,"endColumn":32,"suggestions":"338"},{"ruleId":"322","severity":1,"message":"323","line":70,"column":43,"nodeType":"324","messageId":"325","endLine":70,"endColumn":44,"suggestions":"339"},{"ruleId":"322","severity":1,"message":"323","line":70,"column":58,"nodeType":"324","messageId":"325","endLine":70,"endColumn":59,"suggestions":"340"},{"ruleId":"322","severity":1,"message":"323","line":70,"column":70,"nodeType":"324","messageId":"325","endLine":70,"endColumn":71,"suggestions":"341"},{"ruleId":"322","severity":1,"message":"323","line":85,"column":31,"nodeType":"324","messageId":"325","endLine":85,"endColumn":32,"suggestions":"342"},{"ruleId":"322","severity":1,"message":"323","line":85,"column":45,"nodeType":"324","messageId":"325","endLine":85,"endColumn":46,"suggestions":"343"},{"ruleId":"322","severity":1,"message":"323","line":85,"column":60,"nodeType":"324","messageId":"325","endLine":85,"endColumn":61,"suggestions":"344"},{"ruleId":"322","severity":1,"message":"323","line":85,"column":76,"nodeType":"324","messageId":"325","endLine":85,"endColumn":77,"suggestions":"345"},{"ruleId":"322","severity":1,"message":"323","line":93,"column":33,"nodeType":"324","messageId":"325","endLine":93,"endColumn":34,"suggestions":"346"},{"ruleId":"322","severity":1,"message":"323","line":93,"column":49,"nodeType":"324","messageId":"325","endLine":93,"endColumn":50,"suggestions":"347"},{"ruleId":"322","severity":1,"message":"323","line":93,"column":64,"nodeType":"324","messageId":"325","endLine":93,"endColumn":65,"suggestions":"348"},{"ruleId":"322","severity":1,"message":"323","line":93,"column":76,"nodeType":"324","messageId":"325","endLine":93,"endColumn":77,"suggestions":"349"},{"ruleId":"322","severity":1,"message":"323","line":102,"column":33,"nodeType":"324","messageId":"325","endLine":102,"endColumn":34,"suggestions":"350"},{"ruleId":"322","severity":1,"message":"323","line":102,"column":46,"nodeType":"324","messageId":"325","endLine":102,"endColumn":47,"suggestions":"351"},{"ruleId":"322","severity":1,"message":"323","line":102,"column":61,"nodeType":"324","messageId":"325","endLine":102,"endColumn":62,"suggestions":"352"},{"ruleId":"322","severity":1,"message":"323","line":102,"column":69,"nodeType":"324","messageId":"325","endLine":102,"endColumn":70,"suggestions":"353"},{"ruleId":"322","severity":1,"message":"323","line":109,"column":33,"nodeType":"324","messageId":"325","endLine":109,"endColumn":34,"suggestions":"354"},{"ruleId":"322","severity":1,"message":"323","line":109,"column":47,"nodeType":"324","messageId":"325","endLine":109,"endColumn":48,"suggestions":"355"},{"ruleId":"322","severity":1,"message":"323","line":109,"column":62,"nodeType":"324","messageId":"325","endLine":109,"endColumn":63,"suggestions":"356"},{"ruleId":"322","severity":1,"message":"323","line":109,"column":78,"nodeType":"324","messageId":"325","endLine":109,"endColumn":79,"suggestions":"357"},{"ruleId":"322","severity":1,"message":"323","line":118,"column":33,"nodeType":"324","messageId":"325","endLine":118,"endColumn":34,"suggestions":"358"},{"ruleId":"322","severity":1,"message":"323","line":118,"column":49,"nodeType":"324","messageId":"325","endLine":118,"endColumn":50,"suggestions":"359"},{"ruleId":"322","severity":1,"message":"323","line":118,"column":64,"nodeType":"324","messageId":"325","endLine":118,"endColumn":65,"suggestions":"360"},{"ruleId":"322","severity":1,"message":"323","line":118,"column":78,"nodeType":"324","messageId":"325","endLine":118,"endColumn":79,"suggestions":"361"},{"ruleId":"322","severity":1,"message":"323","line":155,"column":26,"nodeType":"324","messageId":"325","endLine":155,"endColumn":27,"suggestions":"362"},{"ruleId":"322","severity":1,"message":"323","line":155,"column":40,"nodeType":"324","messageId":"325","endLine":155,"endColumn":41,"suggestions":"363"},{"ruleId":"322","severity":1,"message":"323","line":162,"column":26,"nodeType":"324","messageId":"325","endLine":162,"endColumn":27,"suggestions":"364"},{"ruleId":"322","severity":1,"message":"323","line":162,"column":39,"nodeType":"324","messageId":"325","endLine":162,"endColumn":40,"suggestions":"365"},{"ruleId":"322","severity":1,"message":"323","line":169,"column":26,"nodeType":"324","messageId":"325","endLine":169,"endColumn":27,"suggestions":"366"},{"ruleId":"322","severity":1,"message":"323","line":169,"column":38,"nodeType":"324","messageId":"325","endLine":169,"endColumn":39,"suggestions":"367"},{"ruleId":"322","severity":1,"message":"323","line":177,"column":26,"nodeType":"324","messageId":"325","endLine":177,"endColumn":27,"suggestions":"368"},{"ruleId":"322","severity":1,"message":"323","line":177,"column":40,"nodeType":"324","messageId":"325","endLine":177,"endColumn":41,"suggestions":"369"},{"ruleId":"322","severity":1,"message":"323","line":198,"column":25,"nodeType":"324","messageId":"325","endLine":198,"endColumn":26,"suggestions":"370"},{"ruleId":"322","severity":1,"message":"323","line":198,"column":32,"nodeType":"324","messageId":"325","endLine":198,"endColumn":33,"suggestions":"371"},{"ruleId":"322","severity":1,"message":"323","line":198,"column":47,"nodeType":"324","messageId":"325","endLine":198,"endColumn":48,"suggestions":"372"},{"ruleId":"322","severity":1,"message":"323","line":198,"column":59,"nodeType":"324","messageId":"325","endLine":198,"endColumn":60,"suggestions":"373"},{"ruleId":"322","severity":1,"message":"323","line":210,"column":25,"nodeType":"324","messageId":"325","endLine":210,"endColumn":26,"suggestions":"374"},{"ruleId":"322","severity":1,"message":"323","line":210,"column":37,"nodeType":"324","messageId":"325","endLine":210,"endColumn":38,"suggestions":"375"},{"ruleId":"322","severity":1,"message":"323","line":210,"column":52,"nodeType":"324","messageId":"325","endLine":210,"endColumn":53,"suggestions":"376"},{"ruleId":"322","severity":1,"message":"323","line":210,"column":64,"nodeType":"324","messageId":"325","endLine":210,"endColumn":65,"suggestions":"377"},{"ruleId":"322","severity":1,"message":"323","line":225,"column":25,"nodeType":"324","messageId":"325","endLine":225,"endColumn":26,"suggestions":"378"},{"ruleId":"322","severity":1,"message":"323","line":225,"column":39,"nodeType":"324","messageId":"325","endLine":225,"endColumn":40,"suggestions":"379"},{"ruleId":"322","severity":1,"message":"323","line":225,"column":54,"nodeType":"324","messageId":"325","endLine":225,"endColumn":55,"suggestions":"380"},{"ruleId":"322","severity":1,"message":"323","line":225,"column":70,"nodeType":"324","messageId":"325","endLine":225,"endColumn":71,"suggestions":"381"},{"ruleId":"322","severity":1,"message":"323","line":233,"column":25,"nodeType":"324","messageId":"325","endLine":233,"endColumn":26,"suggestions":"382"},{"ruleId":"322","severity":1,"message":"323","line":233,"column":41,"nodeType":"324","messageId":"325","endLine":233,"endColumn":42,"suggestions":"383"},{"ruleId":"322","severity":1,"message":"323","line":233,"column":56,"nodeType":"324","messageId":"325","endLine":233,"endColumn":57,"suggestions":"384"},{"ruleId":"322","severity":1,"message":"323","line":233,"column":68,"nodeType":"324","messageId":"325","endLine":233,"endColumn":69,"suggestions":"385"},{"ruleId":"322","severity":1,"message":"323","line":242,"column":25,"nodeType":"324","messageId":"325","endLine":242,"endColumn":26,"suggestions":"386"},{"ruleId":"322","severity":1,"message":"323","line":242,"column":38,"nodeType":"324","messageId":"325","endLine":242,"endColumn":39,"suggestions":"387"},{"ruleId":"322","severity":1,"message":"323","line":242,"column":53,"nodeType":"324","messageId":"325","endLine":242,"endColumn":54,"suggestions":"388"},{"ruleId":"322","severity":1,"message":"323","line":242,"column":61,"nodeType":"324","messageId":"325","endLine":242,"endColumn":62,"suggestions":"389"},{"ruleId":"322","severity":1,"message":"323","line":249,"column":25,"nodeType":"324","messageId":"325","endLine":249,"endColumn":26,"suggestions":"390"},{"ruleId":"322","severity":1,"message":"323","line":249,"column":39,"nodeType":"324","messageId":"325","endLine":249,"endColumn":40,"suggestions":"391"},{"ruleId":"322","severity":1,"message":"323","line":249,"column":54,"nodeType":"324","messageId":"325","endLine":249,"endColumn":55,"suggestions":"392"},{"ruleId":"322","severity":1,"message":"323","line":249,"column":70,"nodeType":"324","messageId":"325","endLine":249,"endColumn":71,"suggestions":"393"},{"ruleId":"322","severity":1,"message":"323","line":258,"column":25,"nodeType":"324","messageId":"325","endLine":258,"endColumn":26,"suggestions":"394"},{"ruleId":"322","severity":1,"message":"323","line":258,"column":41,"nodeType":"324","messageId":"325","endLine":258,"endColumn":42,"suggestions":"395"},{"ruleId":"322","severity":1,"message":"323","line":258,"column":56,"nodeType":"324","messageId":"325","endLine":258,"endColumn":57,"suggestions":"396"},{"ruleId":"322","severity":1,"message":"323","line":258,"column":70,"nodeType":"324","messageId":"325","endLine":258,"endColumn":71,"suggestions":"397"},{"ruleId":"259","severity":1,"message":"301","line":1,"column":8,"nodeType":"261","messageId":"262","endLine":1,"endColumn":18},{"ruleId":"259","severity":1,"message":"398","line":2,"column":8,"nodeType":"261","messageId":"262","endLine":2,"endColumn":14},{"ruleId":"259","severity":1,"message":"307","line":3,"column":8,"nodeType":"261","messageId":"262","endLine":3,"endColumn":11},{"ruleId":"259","severity":1,"message":"399","line":4,"column":8,"nodeType":"261","messageId":"262","endLine":4,"endColumn":15},{"ruleId":"259","severity":1,"message":"306","line":7,"column":8,"nodeType":"261","messageId":"262","endLine":7,"endColumn":14},{"ruleId":"259","severity":1,"message":"299","line":9,"column":10,"nodeType":"261","messageId":"262","endLine":9,"endColumn":32},{"ruleId":"259","severity":1,"message":"400","line":10,"column":8,"nodeType":"261","messageId":"262","endLine":10,"endColumn":14},{"ruleId":"259","severity":1,"message":"401","line":12,"column":10,"nodeType":"261","messageId":"262","endLine":12,"endColumn":17},{"ruleId":"259","severity":1,"message":"402","line":13,"column":10,"nodeType":"261","messageId":"262","endLine":13,"endColumn":16},{"ruleId":"259","severity":1,"message":"403","line":4,"column":8,"nodeType":"261","messageId":"262","endLine":4,"endColumn":24},{"ruleId":"259","severity":1,"message":"404","line":1,"column":8,"nodeType":"261","messageId":"262","endLine":1,"endColumn":13},{"ruleId":"259","severity":1,"message":"405","line":4,"column":8,"nodeType":"261","messageId":"262","endLine":4,"endColumn":19},{"ruleId":"259","severity":1,"message":"406","line":5,"column":8,"nodeType":"261","messageId":"262","endLine":5,"endColumn":17},{"ruleId":"259","severity":1,"message":"407","line":7,"column":8,"nodeType":"261","messageId":"262","endLine":7,"endColumn":16},{"ruleId":"259","severity":1,"message":"408","line":2,"column":27,"nodeType":"261","messageId":"262","endLine":2,"endColumn":33},{"ruleId":"259","severity":1,"message":"409","line":2,"column":35,"nodeType":"261","messageId":"262","endLine":2,"endColumn":40},{"ruleId":"259","severity":1,"message":"410","line":2,"column":42,"nodeType":"261","messageId":"262","endLine":2,"endColumn":48},{"ruleId":"259","severity":1,"message":"411","line":3,"column":8,"nodeType":"261","messageId":"262","endLine":3,"endColumn":16},{"ruleId":"259","severity":1,"message":"264","line":13,"column":8,"nodeType":"261","messageId":"262","endLine":13,"endColumn":9},{"ruleId":"259","severity":1,"message":"412","line":29,"column":10,"nodeType":"261","messageId":"262","endLine":29,"endColumn":23},{"ruleId":"259","severity":1,"message":"413","line":53,"column":9,"nodeType":"261","messageId":"262","endLine":53,"endColumn":14},{"ruleId":"259","severity":1,"message":"414","line":61,"column":9,"nodeType":"261","messageId":"262","endLine":61,"endColumn":25},{"ruleId":"259","severity":1,"message":"269","line":186,"column":11,"nodeType":"261","messageId":"262","endLine":186,"endColumn":26},{"ruleId":"265","severity":1,"message":"266","line":195,"column":17,"nodeType":"267","messageId":"268","endLine":195,"endColumn":19},{"ruleId":"265","severity":1,"message":"266","line":198,"column":24,"nodeType":"267","messageId":"268","endLine":198,"endColumn":26},{"ruleId":"259","severity":1,"message":"270","line":201,"column":13,"nodeType":"261","messageId":"262","endLine":201,"endColumn":19},{"ruleId":"259","severity":1,"message":"270","line":206,"column":13,"nodeType":"261","messageId":"262","endLine":206,"endColumn":19},{"ruleId":"265","severity":1,"message":"266","line":232,"column":17,"nodeType":"267","messageId":"268","endLine":232,"endColumn":19},{"ruleId":"265","severity":1,"message":"266","line":236,"column":24,"nodeType":"267","messageId":"268","endLine":236,"endColumn":26},{"ruleId":"271","severity":1,"message":"283","line":351,"column":6,"nodeType":"273","endLine":351,"endColumn":20,"suggestions":"415"},{"ruleId":"271","severity":1,"message":"285","line":359,"column":6,"nodeType":"273","endLine":359,"endColumn":19,"suggestions":"416"},{"ruleId":"271","severity":1,"message":"287","line":372,"column":6,"nodeType":"273","endLine":372,"endColumn":39,"suggestions":"417"},{"ruleId":"271","severity":1,"message":"289","line":387,"column":8,"nodeType":"273","endLine":387,"endColumn":43,"suggestions":"418"},{"ruleId":"271","severity":1,"message":"419","line":392,"column":8,"nodeType":"273","endLine":392,"endColumn":10,"suggestions":"420"},{"ruleId":"271","severity":1,"message":"421","line":450,"column":8,"nodeType":"273","endLine":450,"endColumn":80,"suggestions":"422"},"no-native-reassign",["423"],"no-negated-in-lhs",["424"],"no-unused-vars","'StartPage' is defined but never used.","Identifier","unusedVar","'GuidedAnnotation' is defined but never used.","'_' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'which_match_mtx' is assigned a value but never used.","'isSpan' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'g_CurrSentInd', 'g_MachineStateHandlerWrapper', and 'g_StateMachineState'. Either include them or remove the dependency array.","ArrayExpression",["425"],"React Hook useEffect has a missing dependency: 'g_SetSummaryShadowAndUpdateHighlights'. Either include it or remove the dependency array.",["426"],"React Hook useEffect has missing dependencies: 'g_boldStateHandler' and 'g_sliderBoldStateActivated'. Either include them or remove the dependency array.",["427"],"React Hook useEffect has a missing dependency: 'g_oldAlignmentStateHandler'. Either include it or remove the dependency array.",["428"],"React Hook useEffect has missing dependencies: 'g_DocOnMouseDownID', 'g_StateMachineState', 'g_SummaryOnMouseDownID', 'g_checkIfLemmasMatch', 'g_doc_json', 'g_hoverActivatedDocOrSummary', 'g_isRedLettered', and 'g_summary_json'. Either include them or remove the dependency array. You can also do a functional update 'g_setDocJson(g => ...)' if you only need 'g_doc_json' in the 'g_setDocJson' call.",["429"],"React Hook useEffect has missing dependencies: 'CurrSentInd', 'MachineStateHandlerWrapper', and 'StateMachineState'. Either include them or remove the dependency array.",["430"],"React Hook useEffect has a missing dependency: 'SetSummaryShadowAndUpdateHighlights'. Either include it or remove the dependency array.",["431"],"React Hook useEffect has missing dependencies: 'boldStateHandler' and 'sliderBoldStateActivated'. Either include them or remove the dependency array.",["432"],"React Hook useEffect has a missing dependency: 'oldAlignmentStateHandler'. Either include it or remove the dependency array.",["433"],"React Hook useEffect has missing dependencies: 'doc_json' and 't_doc_json'. Either include them or remove the dependency array.",["434"],"React Hook useEffect has missing dependencies: 'DocOnMouseDownID', 'StateMachineState', 'SummaryOnMouseDownID', 'checkIfLemmasMatch', 'doc_json', 'hoverActivatedDocOrSummary', 'isRedLettered', and 'summary_json'. Either include them or remove the dependency array. You can also do a functional update 'setDocJson(d => ...)' if you only need 'doc_json' in the 'setDocJson' call.",["435"],"'getGuidedAnnotationToastTitle' is defined but never used.","'getGuidedAnnotationToastText' is defined but never used.","'MuiAlert' is defined but never used.","'ArrowBackIosTwoTone' is defined but never used.","'ArrowForwardIosTwoTone' is defined but never used.","'SendIcon' is defined but never used.","'Typography' is defined but never used.","'Fab' is defined but never used.","'CardHeader' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Button' is defined but never used.","'Box' is defined but never used.","'borderColor' is defined but never used.","'DocMouseclickStartID' is assigned a value but never used.","'DocMouseclicked' is assigned a value but never used.","'SummaryMouseclickStartID' is assigned a value but never used.","'SummaryMouseclicked' is assigned a value but never used.","The ref value 'containerRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'containerRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'callbackFunction'. Either include it or remove the dependency array.",["436"],"React Hook useEffect has missing dependencies: 'doc_json' and 'isTutorial'. Either include them or remove the dependency array.",["437"],"'ButtonGroup' is defined but never used.","'spacing' is defined but never used.","'pages' is assigned a value but never used.","'BackButton' is defined but never used.","no-useless-escape","Unnecessary escape character: \\\".","TemplateElement","unnecessaryEscape",["438","439"],["440","441"],["442","443"],["444","445"],["446","447"],["448","449"],["450","451"],["452","453"],["454","455"],["456","457"],["458","459"],["460","461"],["462","463"],["464","465"],["466","467"],["468","469"],["470","471"],["472","473"],["474","475"],["476","477"],["478","479"],["480","481"],["482","483"],["484","485"],["486","487"],["488","489"],["490","491"],["492","493"],["494","495"],["496","497"],["498","499"],["500","501"],["502","503"],["504","505"],["506","507"],["508","509"],["510","511"],["512","513"],["514","515"],["516","517"],["518","519"],["520","521"],["522","523"],["524","525"],["526","527"],["528","529"],["530","531"],["532","533"],["534","535"],["536","537"],["538","539"],["540","541"],["542","543"],["544","545"],["546","547"],["548","549"],["550","551"],["552","553"],["554","555"],["556","557"],["558","559"],["560","561"],["562","563"],["564","565"],["566","567"],["568","569"],["570","571"],["572","573"],["574","575"],["576","577"],["578","579"],["580","581"],"'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Slider' is defined but never used.","'padding' is defined but never used.","'styled' is defined but never used.","'ResponsiveAppBar' is defined but never used.","'Alert' is defined but never used.","'ToastHeader' is defined but never used.","'ToastBody' is defined but never used.","'Carousel' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'Snackbar' is defined but never used.","'error_message' is assigned a value but never used.","'Alert' is assigned a value but never used.","'handleErrorClose' is assigned a value but never used.",["582"],["583"],["584"],["585"],"React Hook useEffect has a missing dependency: 'doc_json'. Either include it or remove the dependency array.",["586"],"React Hook useEffect has missing dependencies: 'DocOnMouseDownID', 'StateMachineState', 'SummaryOnMouseDownID', 'checkIfLemmasMatch', 'doc_json', 'hoverActivatedDocOrSummary', 'isRedLettered', 'setDocJson', 'setSummaryJson', and 'summary_json'. Either include them or remove the dependency array. If 'setDocJson' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["587"],"no-global-assign","no-unsafe-negation",{"desc":"588","fix":"589"},{"desc":"590","fix":"591"},{"desc":"592","fix":"593"},{"desc":"594","fix":"595"},{"desc":"596","fix":"597"},{"desc":"598","fix":"599"},{"desc":"600","fix":"601"},{"desc":"602","fix":"603"},{"desc":"604","fix":"605"},{"desc":"606","fix":"607"},{"desc":"608","fix":"609"},{"desc":"610","fix":"611"},{"desc":"612","fix":"613"},{"messageId":"614","fix":"615","desc":"616"},{"messageId":"617","fix":"618","desc":"619"},{"messageId":"614","fix":"620","desc":"616"},{"messageId":"617","fix":"621","desc":"619"},{"messageId":"614","fix":"622","desc":"616"},{"messageId":"617","fix":"623","desc":"619"},{"messageId":"614","fix":"624","desc":"616"},{"messageId":"617","fix":"625","desc":"619"},{"messageId":"614","fix":"626","desc":"616"},{"messageId":"617","fix":"627","desc":"619"},{"messageId":"614","fix":"628","desc":"616"},{"messageId":"617","fix":"629","desc":"619"},{"messageId":"614","fix":"630","desc":"616"},{"messageId":"617","fix":"631","desc":"619"},{"messageId":"614","fix":"632","desc":"616"},{"messageId":"617","fix":"633","desc":"619"},{"messageId":"614","fix":"634","desc":"616"},{"messageId":"617","fix":"635","desc":"619"},{"messageId":"614","fix":"636","desc":"616"},{"messageId":"617","fix":"637","desc":"619"},{"messageId":"614","fix":"638","desc":"616"},{"messageId":"617","fix":"639","desc":"619"},{"messageId":"614","fix":"640","desc":"616"},{"messageId":"617","fix":"641","desc":"619"},{"messageId":"614","fix":"642","desc":"616"},{"messageId":"617","fix":"643","desc":"619"},{"messageId":"614","fix":"644","desc":"616"},{"messageId":"617","fix":"645","desc":"619"},{"messageId":"614","fix":"646","desc":"616"},{"messageId":"617","fix":"647","desc":"619"},{"messageId":"614","fix":"648","desc":"616"},{"messageId":"617","fix":"649","desc":"619"},{"messageId":"614","fix":"650","desc":"616"},{"messageId":"617","fix":"651","desc":"619"},{"messageId":"614","fix":"652","desc":"616"},{"messageId":"617","fix":"653","desc":"619"},{"messageId":"614","fix":"654","desc":"616"},{"messageId":"617","fix":"655","desc":"619"},{"messageId":"614","fix":"656","desc":"616"},{"messageId":"617","fix":"657","desc":"619"},{"messageId":"614","fix":"658","desc":"616"},{"messageId":"617","fix":"659","desc":"619"},{"messageId":"614","fix":"660","desc":"616"},{"messageId":"617","fix":"661","desc":"619"},{"messageId":"614","fix":"662","desc":"616"},{"messageId":"617","fix":"663","desc":"619"},{"messageId":"614","fix":"664","desc":"616"},{"messageId":"617","fix":"665","desc":"619"},{"messageId":"614","fix":"666","desc":"616"},{"messageId":"617","fix":"667","desc":"619"},{"messageId":"614","fix":"668","desc":"616"},{"messageId":"617","fix":"669","desc":"619"},{"messageId":"614","fix":"670","desc":"616"},{"messageId":"617","fix":"671","desc":"619"},{"messageId":"614","fix":"672","desc":"616"},{"messageId":"617","fix":"673","desc":"619"},{"messageId":"614","fix":"674","desc":"616"},{"messageId":"617","fix":"675","desc":"619"},{"messageId":"614","fix":"676","desc":"616"},{"messageId":"617","fix":"677","desc":"619"},{"messageId":"614","fix":"678","desc":"616"},{"messageId":"617","fix":"679","desc":"619"},{"messageId":"614","fix":"680","desc":"616"},{"messageId":"617","fix":"681","desc":"619"},{"messageId":"614","fix":"682","desc":"616"},{"messageId":"617","fix":"683","desc":"619"},{"messageId":"614","fix":"684","desc":"616"},{"messageId":"617","fix":"685","desc":"619"},{"messageId":"614","fix":"686","desc":"616"},{"messageId":"617","fix":"687","desc":"619"},{"messageId":"614","fix":"688","desc":"616"},{"messageId":"617","fix":"689","desc":"619"},{"messageId":"614","fix":"690","desc":"616"},{"messageId":"617","fix":"691","desc":"619"},{"messageId":"614","fix":"692","desc":"616"},{"messageId":"617","fix":"693","desc":"619"},{"messageId":"614","fix":"694","desc":"616"},{"messageId":"617","fix":"695","desc":"619"},{"messageId":"614","fix":"696","desc":"616"},{"messageId":"617","fix":"697","desc":"619"},{"messageId":"614","fix":"698","desc":"616"},{"messageId":"617","fix":"699","desc":"619"},{"messageId":"614","fix":"700","desc":"616"},{"messageId":"617","fix":"701","desc":"619"},{"messageId":"614","fix":"702","desc":"616"},{"messageId":"617","fix":"703","desc":"619"},{"messageId":"614","fix":"704","desc":"616"},{"messageId":"617","fix":"705","desc":"619"},{"messageId":"614","fix":"706","desc":"616"},{"messageId":"617","fix":"707","desc":"619"},{"messageId":"614","fix":"708","desc":"616"},{"messageId":"617","fix":"709","desc":"619"},{"messageId":"614","fix":"710","desc":"616"},{"messageId":"617","fix":"711","desc":"619"},{"messageId":"614","fix":"712","desc":"616"},{"messageId":"617","fix":"713","desc":"619"},{"messageId":"614","fix":"714","desc":"616"},{"messageId":"617","fix":"715","desc":"619"},{"messageId":"614","fix":"716","desc":"616"},{"messageId":"617","fix":"717","desc":"619"},{"messageId":"614","fix":"718","desc":"616"},{"messageId":"617","fix":"719","desc":"619"},{"messageId":"614","fix":"720","desc":"616"},{"messageId":"617","fix":"721","desc":"619"},{"messageId":"614","fix":"722","desc":"616"},{"messageId":"617","fix":"723","desc":"619"},{"messageId":"614","fix":"724","desc":"616"},{"messageId":"617","fix":"725","desc":"619"},{"messageId":"614","fix":"726","desc":"616"},{"messageId":"617","fix":"727","desc":"619"},{"messageId":"614","fix":"728","desc":"616"},{"messageId":"617","fix":"729","desc":"619"},{"messageId":"614","fix":"730","desc":"616"},{"messageId":"617","fix":"731","desc":"619"},{"messageId":"614","fix":"732","desc":"616"},{"messageId":"617","fix":"733","desc":"619"},{"messageId":"614","fix":"734","desc":"616"},{"messageId":"617","fix":"735","desc":"619"},{"messageId":"614","fix":"736","desc":"616"},{"messageId":"617","fix":"737","desc":"619"},{"messageId":"614","fix":"738","desc":"616"},{"messageId":"617","fix":"739","desc":"619"},{"messageId":"614","fix":"740","desc":"616"},{"messageId":"617","fix":"741","desc":"619"},{"messageId":"614","fix":"742","desc":"616"},{"messageId":"617","fix":"743","desc":"619"},{"messageId":"614","fix":"744","desc":"616"},{"messageId":"617","fix":"745","desc":"619"},{"messageId":"614","fix":"746","desc":"616"},{"messageId":"617","fix":"747","desc":"619"},{"messageId":"614","fix":"748","desc":"616"},{"messageId":"617","fix":"749","desc":"619"},{"messageId":"614","fix":"750","desc":"616"},{"messageId":"617","fix":"751","desc":"619"},{"messageId":"614","fix":"752","desc":"616"},{"messageId":"617","fix":"753","desc":"619"},{"messageId":"614","fix":"754","desc":"616"},{"messageId":"617","fix":"755","desc":"619"},{"messageId":"614","fix":"756","desc":"616"},{"messageId":"617","fix":"757","desc":"619"},{"messageId":"614","fix":"758","desc":"616"},{"messageId":"617","fix":"759","desc":"619"},{"messageId":"614","fix":"760","desc":"616"},{"messageId":"617","fix":"761","desc":"619"},{"desc":"598","fix":"762"},{"desc":"600","fix":"763"},{"desc":"602","fix":"764"},{"desc":"604","fix":"765"},{"desc":"766","fix":"767"},{"desc":"768","fix":"769"},"Update the dependencies array to be: [g_CurrSentInd, g_MachineStateHandlerWrapper, g_StateMachineState, g_summary_json]",{"range":"770","text":"771"},"Update the dependencies array to be: [g_CurrSentInd, g_SetSummaryShadowAndUpdateHighlights]",{"range":"772","text":"773"},"Update the dependencies array to be: [g_StateMachineState, g_boldStateHandler, g_sliderBoldStateActivated, g_summary_json]",{"range":"774","text":"775"},"Update the dependencies array to be: [g_StateMachineState, g_AlignmentCount, g_oldAlignmentStateHandler]",{"range":"776","text":"777"},"Update the dependencies array to be: [g_docOnMouseDownActivated, g_summaryOnMouseDownActivated, g_hoverActivatedId, g_StateMachineState, g_DocOnMouseDownID, g_doc_json, g_SummaryOnMouseDownID, g_summary_json, g_isRedLettered, g_hoverActivatedDocOrSummary, g_checkIfLemmasMatch]",{"range":"778","text":"779"},"Update the dependencies array to be: [CurrSentInd, MachineStateHandlerWrapper, StateMachineState, summary_json]",{"range":"780","text":"781"},"Update the dependencies array to be: [CurrSentInd, SetSummaryShadowAndUpdateHighlights]",{"range":"782","text":"783"},"Update the dependencies array to be: [StateMachineState, boldStateHandler, sliderBoldStateActivated, summary_json]",{"range":"784","text":"785"},"Update the dependencies array to be: [StateMachineState, AlignmentCount, oldAlignmentStateHandler]",{"range":"786","text":"787"},"Update the dependencies array to be: [CurrSentInd, doc_json, t_doc_json]",{"range":"788","text":"789"},"Update the dependencies array to be: [docOnMouseDownActivated, summaryOnMouseDownActivated, hoverActivatedId, StateMachineState, DocOnMouseDownID, doc_json, SummaryOnMouseDownID, summary_json, isRedLettered, hoverActivatedDocOrSummary, checkIfLemmasMatch]",{"range":"790","text":"791"},"Update the dependencies array to be: [callbackFunction, containerRef, options]",{"range":"792","text":"793"},"Update the dependencies array to be: [doc_json, isTutorial]",{"range":"794","text":"795"},"removeEscape",{"range":"796","text":"797"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"798","text":"799"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"800","text":"797"},{"range":"801","text":"799"},{"range":"802","text":"797"},{"range":"803","text":"799"},{"range":"804","text":"797"},{"range":"805","text":"799"},{"range":"806","text":"797"},{"range":"807","text":"799"},{"range":"808","text":"797"},{"range":"809","text":"799"},{"range":"810","text":"797"},{"range":"811","text":"799"},{"range":"812","text":"797"},{"range":"813","text":"799"},{"range":"814","text":"797"},{"range":"815","text":"799"},{"range":"816","text":"797"},{"range":"817","text":"799"},{"range":"818","text":"797"},{"range":"819","text":"799"},{"range":"820","text":"797"},{"range":"821","text":"799"},{"range":"822","text":"797"},{"range":"823","text":"799"},{"range":"824","text":"797"},{"range":"825","text":"799"},{"range":"826","text":"797"},{"range":"827","text":"799"},{"range":"828","text":"797"},{"range":"829","text":"799"},{"range":"830","text":"797"},{"range":"831","text":"799"},{"range":"832","text":"797"},{"range":"833","text":"799"},{"range":"834","text":"797"},{"range":"835","text":"799"},{"range":"836","text":"797"},{"range":"837","text":"799"},{"range":"838","text":"797"},{"range":"839","text":"799"},{"range":"840","text":"797"},{"range":"841","text":"799"},{"range":"842","text":"797"},{"range":"843","text":"799"},{"range":"844","text":"797"},{"range":"845","text":"799"},{"range":"846","text":"797"},{"range":"847","text":"799"},{"range":"848","text":"797"},{"range":"849","text":"799"},{"range":"850","text":"797"},{"range":"851","text":"799"},{"range":"852","text":"797"},{"range":"853","text":"799"},{"range":"854","text":"797"},{"range":"855","text":"799"},{"range":"856","text":"797"},{"range":"857","text":"799"},{"range":"858","text":"797"},{"range":"859","text":"799"},{"range":"860","text":"797"},{"range":"861","text":"799"},{"range":"862","text":"797"},{"range":"863","text":"799"},{"range":"864","text":"797"},{"range":"865","text":"799"},{"range":"866","text":"797"},{"range":"867","text":"799"},{"range":"868","text":"797"},{"range":"869","text":"799"},{"range":"870","text":"797"},{"range":"871","text":"799"},{"range":"872","text":"797"},{"range":"873","text":"799"},{"range":"874","text":"797"},{"range":"875","text":"799"},{"range":"876","text":"797"},{"range":"877","text":"799"},{"range":"878","text":"797"},{"range":"879","text":"799"},{"range":"880","text":"797"},{"range":"881","text":"799"},{"range":"882","text":"797"},{"range":"883","text":"799"},{"range":"884","text":"797"},{"range":"885","text":"799"},{"range":"886","text":"797"},{"range":"887","text":"799"},{"range":"888","text":"797"},{"range":"889","text":"799"},{"range":"890","text":"797"},{"range":"891","text":"799"},{"range":"892","text":"797"},{"range":"893","text":"799"},{"range":"894","text":"797"},{"range":"895","text":"799"},{"range":"896","text":"797"},{"range":"897","text":"799"},{"range":"898","text":"797"},{"range":"899","text":"799"},{"range":"900","text":"797"},{"range":"901","text":"799"},{"range":"902","text":"797"},{"range":"903","text":"799"},{"range":"904","text":"797"},{"range":"905","text":"799"},{"range":"906","text":"797"},{"range":"907","text":"799"},{"range":"908","text":"797"},{"range":"909","text":"799"},{"range":"910","text":"797"},{"range":"911","text":"799"},{"range":"912","text":"797"},{"range":"913","text":"799"},{"range":"914","text":"797"},{"range":"915","text":"799"},{"range":"916","text":"797"},{"range":"917","text":"799"},{"range":"918","text":"797"},{"range":"919","text":"799"},{"range":"920","text":"797"},{"range":"921","text":"799"},{"range":"922","text":"797"},{"range":"923","text":"799"},{"range":"924","text":"797"},{"range":"925","text":"799"},{"range":"926","text":"797"},{"range":"927","text":"799"},{"range":"928","text":"797"},{"range":"929","text":"799"},{"range":"930","text":"797"},{"range":"931","text":"799"},{"range":"932","text":"797"},{"range":"933","text":"799"},{"range":"934","text":"797"},{"range":"935","text":"799"},{"range":"936","text":"797"},{"range":"937","text":"799"},{"range":"938","text":"797"},{"range":"939","text":"799"},{"range":"940","text":"797"},{"range":"941","text":"799"},{"range":"942","text":"781"},{"range":"943","text":"783"},{"range":"944","text":"785"},{"range":"945","text":"787"},"Update the dependencies array to be: [doc_json]",{"range":"946","text":"947"},"Update the dependencies array to be: [docOnMouseDownActivated, summaryOnMouseDownActivated, hoverActivatedId, StateMachineState, DocOnMouseDownID, setDocJson, doc_json, SummaryOnMouseDownID, setSummaryJson, summary_json, isRedLettered, hoverActivatedDocOrSummary, checkIfLemmasMatch]",{"range":"948","text":"949"},[41887,41903],"[g_CurrSentInd, g_MachineStateHandlerWrapper, g_StateMachineState, g_summary_json]",[42169,42184],"[g_CurrSentInd, g_SetSummaryShadowAndUpdateHighlights]",[43161,43198],"[g_StateMachineState, g_boldStateHandler, g_sliderBoldStateActivated, g_summary_json]",[43957,43996],"[g_StateMachineState, g_AlignmentCount, g_oldAlignmentStateHandler]",[47333,47411],"[g_docOnMouseDownActivated, g_summaryOnMouseDownActivated, g_hoverActivatedId, g_StateMachineState, g_DocOnMouseDownID, g_doc_json, g_SummaryOnMouseDownID, g_summary_json, g_isRedLettered, g_hoverActivatedDocOrSummary, g_checkIfLemmasMatch]",[49445,49459],"[CurrSentInd, MachineStateHandlerWrapper, StateMachineState, summary_json]",[49727,49740],"[CurrSentInd, SetSummaryShadowAndUpdateHighlights]",[50705,50738],"[StateMachineState, boldStateHandler, sliderBoldStateActivated, summary_json]",[51493,51528],"[StateMachineState, AlignmentCount, oldAlignmentStateHandler]",[51847,51860],"[CurrSentInd, doc_json, t_doc_json]",[55119,55191],"[docOnMouseDownActivated, summaryOnMouseDownActivated, hoverActivatedId, StateMachineState, DocOnMouseDownID, doc_json, SummaryOnMouseDownID, summary_json, isRedLettered, hoverActivatedDocOrSummary, checkIfLemmasMatch]",[12318,12341],"[callbackFunction, containerRef, options]",[12572,12574],"[doc_json, isTutorial]",[851,852],"",[851,851],"\\",[865,866],[865,865],[1131,1132],[1131,1131],[1144,1145],[1144,1144],[1399,1400],[1399,1399],[1411,1412],[1411,1411],[1720,1721],[1720,1720],[1734,1735],[1734,1734],[2758,2759],[2758,2758],[2765,2766],[2765,2765],[2780,2781],[2780,2780],[2792,2793],[2792,2792],[3276,3277],[3276,3276],[3288,3289],[3288,3288],[3303,3304],[3303,3303],[3315,3316],[3315,3315],[3984,3985],[3984,3984],[3998,3999],[3998,3998],[4013,4014],[4013,4013],[4029,4030],[4029,4029],[4480,4481],[4480,4480],[4496,4497],[4496,4496],[4511,4512],[4511,4511],[4523,4524],[4523,4523],[4942,4943],[4942,4942],[4955,4956],[4955,4955],[4970,4971],[4970,4970],[4978,4979],[4978,4978],[5212,5213],[5212,5212],[5226,5227],[5226,5226],[5241,5242],[5241,5241],[5257,5258],[5257,5257],[5619,5620],[5619,5619],[5635,5636],[5635,5635],[5650,5651],[5650,5650],[5664,5665],[5664,5664],[6793,6794],[6793,6793],[6807,6808],[6807,6807],[7043,7044],[7043,7043],[7056,7057],[7056,7056],[7281,7282],[7281,7281],[7293,7294],[7293,7293],[7566,7567],[7566,7566],[7580,7581],[7580,7580],[8492,8493],[8492,8492],[8499,8500],[8499,8499],[8514,8515],[8514,8514],[8526,8527],[8526,8526],[8989,8990],[8989,8989],[9001,9002],[9001,9001],[9016,9017],[9016,9016],[9028,9029],[9028,9028],[9625,9626],[9625,9625],[9639,9640],[9639,9639],[9654,9655],[9654,9654],[9670,9671],[9670,9670],[10071,10072],[10071,10071],[10087,10088],[10087,10087],[10102,10103],[10102,10102],[10114,10115],[10114,10114],[10473,10474],[10473,10473],[10486,10487],[10486,10486],[10501,10502],[10501,10501],[10509,10510],[10509,10509],[10701,10702],[10701,10701],[10715,10716],[10715,10715],[10730,10731],[10730,10730],[10746,10747],[10746,10746],[11050,11051],[11050,11050],[11066,11067],[11066,11066],[11081,11082],[11081,11081],[11095,11096],[11095,11095],[18613,18627],[18895,18908],[19873,19906],[20661,20696],[20884,20886],"[doc_json]",[24145,24217],"[docOnMouseDownActivated, summaryOnMouseDownActivated, hoverActivatedId, StateMachineState, DocOnMouseDownID, setDocJson, doc_json, SummaryOnMouseDownID, setSummaryJson, summary_json, isRedLettered, hoverActivatedDocOrSummary, checkIfLemmasMatch]"]